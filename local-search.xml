<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Poco X4 GT insert magisk into ROM</title>
    <link href="/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/"/>
    <url>/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/</url>
    
    <content type="html"><![CDATA[<h2 id="下载并使用magisk刷写boot-img"><a href="#下载并使用magisk刷写boot-img" class="headerlink" title="下载并使用magisk刷写boot.img"></a>下载并使用magisk刷写boot.img</h2><p>首先下载对应版本的线刷包（Fastboot），下载网址：<a href="https://xiaomifirmwareupdater.com/miui/xaga/">https://xiaomifirmwareupdater.com/miui/xaga/</a></p><p>我是全球版本的ROM，因此选择Global版本：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013552213.png" alt="image-20231117013552213"></p><p>之后将压缩包中的boot.img文件提取出来：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013714839.png" alt="image-20231117013714839"></p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013736077.png" alt="image-20231117013736077"></p><p>然后导入手机，打开magisk选择install（Magisk旁的install）：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014224668.png" alt="image-20231117014224668"></p><p>选择boot.img之后点击let’s go：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014218823.png" alt="image-20231117014218823"></p><p>最后等待刷写完成：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014359917.png" alt="image-20231117014359917"></p><h2 id="使用adb将boot-img重新刷写入系统"><a href="#使用adb将boot-img重新刷写入系统" class="headerlink" title="使用adb将boot.img重新刷写入系统"></a>使用adb将boot.img重新刷写入系统</h2><p>首先确保fastboot是否能够检测到设别，如果不能的话，需要先使用MiUsbDriver打好驱动：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014642200.png" alt="image-20231117014642200"></p><p>之后使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot devices<br></code></pre></td></tr></table></figure><p>查看连接到电脑上的手机设备是否已经被识别到：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014813735.png" alt="image-20231117014813735"></p><p>如果被成功识别，会显示上述文本</p><p>之后使用如下命令刷写boot.img分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot flash boot_ab &#123;your_magisk_boot.img&#125;<br></code></pre></td></tr></table></figure><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117015153873.png" alt="image-20231117015153873"></p><p>（该命令源自于刷机包中的<code> flash_all.bat</code>文件）</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117015333584.png" alt="image-20231117015333584"></p><p>至此，刷写完成。（但我现在的状况是magisk内显示没有root但lsposed可以正常工作，很迷）</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to crawl lyrics and music data from netease music with artist&#39;s name and song&#39;s name</title>
    <link href="/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/"/>
    <url>/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/</url>
    
    <content type="html"><![CDATA[<h2 id="参考的源码以及新版selenium的api修改"><a href="#参考的源码以及新版selenium的api修改" class="headerlink" title="参考的源码以及新版selenium的api修改"></a>参考的源码以及新版selenium的api修改</h2><p>根据 <a href="https://blog.51cto.com/u_13403836/5674642">https://blog.51cto.com/u_13403836/5674642</a> 中的代码，其中有基于selenium得到歌曲id的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<br><span class="hljs-keyword">from</span> urllib.error <span class="hljs-keyword">import</span> URLError<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> random<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">无界面模式代码</span><br><span class="hljs-string">chrome_options=webdriver.ChromeOptions()</span><br><span class="hljs-string">chrome_options.add_argument(&quot;--headless&quot;)</span><br><span class="hljs-string">browser = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getMaxPage</span>(<span class="hljs-params">SongComments</span>):<br>    max_page = SongComments.split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>]  <span class="hljs-comment">#从字符串中解析出评论数</span><br>    offset = <span class="hljs-number">20</span>  <span class="hljs-comment"># 每页显示20条最新评论</span><br>    max_page = math.ceil(<span class="hljs-built_in">int</span>(max_page) / offset)  <span class="hljs-comment">#求出总的评论页数</span><br>    <span class="hljs-keyword">return</span> max_page  <span class="hljs-comment">#返回评论页数</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">go_nextpage</span>(<span class="hljs-params">browser</span>):  <span class="hljs-comment">#模拟人为操作，点击【下一页】</span><br>    next_button = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;m-cmmt&#x27;]/div[3]/div[1]/a&quot;</span>)[-<span class="hljs-number">1</span>]  <span class="hljs-comment">#获取到下一页按钮的位置</span><br>    browser.execute_script(<span class="hljs-string">&quot;window.scrollTo(0, document.body.scrollHeight)&quot;</span>);  <span class="hljs-comment">#拉动滚动条到浏览器底部</span><br>    <span class="hljs-keyword">if</span> next_button.text == <span class="hljs-string">&#x27;下一页&#x27;</span>:<br>        next_button.click()          <span class="hljs-comment">#点击下一页</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_comments</span>(<span class="hljs-params">is_first, browser</span>):   <span class="hljs-comment">#获取评论数据</span><br>    items = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;cmmts j-flag&#x27;]/div[@class=&#x27;itm&#x27;]&quot;</span>)<br>    <span class="hljs-comment"># 首页的数据中包含15条精彩评论，20条最新评论，只保留最新评论</span><br>    <span class="hljs-keyword">if</span> is_first:      <span class="hljs-comment">#如果是第一页</span><br>        items = items[<span class="hljs-number">15</span>: <span class="hljs-built_in">len</span>(items)]<br>    data_list = []<br>    data = &#123;&#125;<br>    <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> items:<br>        <span class="hljs-comment"># 用户id</span><br>        userId = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;head&#x27;]/a&quot;</span>)[<span class="hljs-number">0</span>]<br>        userId = userId.get_attribute(<span class="hljs-string">&#x27;href&#x27;</span>).split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>]<br>        <span class="hljs-comment"># 用户昵称</span><br>        nickname = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[1]/div[1]/a&quot;</span>)[<span class="hljs-number">0</span>]<br>        nickname = nickname.text<br>        <span class="hljs-comment"># 评论内容</span><br>        content = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[1]/div[1]&quot;</span>)[<span class="hljs-number">0</span>]<br>        content = content.text.split(<span class="hljs-string">&#x27;：&#x27;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 中文冒号</span><br>        <span class="hljs-comment"># 点赞数</span><br>        like = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[@class=&#x27;rp&#x27;]/a[1]&quot;</span>)[<span class="hljs-number">0</span>]<br>        like = like.text<br>        <span class="hljs-keyword">if</span> like:<br>            like = like.strip().split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">else</span>:<br>            like = <span class="hljs-string">&#x27;0&#x27;</span><br>        <span class="hljs-comment"># 头像地址</span><br>        avatar = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;head&#x27;]/a/img&quot;</span>)[<span class="hljs-number">0</span>]<br>        avatar = avatar.get_attribute(<span class="hljs-string">&#x27;src&#x27;</span>)<br><br>        data[<span class="hljs-string">&#x27;userId&#x27;</span>] = userId<br>        data[<span class="hljs-string">&#x27;nickname&#x27;</span>] = nickname<br>        data[<span class="hljs-string">&#x27;content&#x27;</span>] = content<br>        data[<span class="hljs-string">&#x27;like&#x27;</span>] = like<br>        data[<span class="hljs-string">&#x27;avatar&#x27;</span>] = avatar<br>        <span class="hljs-built_in">print</span>(data)<br>        data_list.append(data)<br>        data = &#123;&#125;<br>    <span class="hljs-keyword">return</span> data_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gotoSong</span>(<span class="hljs-params">SongName</span>):<br>    <span class="hljs-keyword">try</span>:<br>        browser=webdriver.Chrome()<br>        browser.get(<span class="hljs-string">&quot;https://music.163.com/&quot;</span>)<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-built_in">input</span>=browser.find_element_by_id(<span class="hljs-string">&quot;srch&quot;</span>)  <span class="hljs-comment">#找到搜索栏</span><br>        <span class="hljs-built_in">input</span>.send_keys(SongName)    <span class="hljs-comment">#输入歌曲名</span><br>        <span class="hljs-built_in">input</span>.send_keys(Keys.ENTER)  <span class="hljs-comment">#按下ENTER键</span><br>        time.sleep(<span class="hljs-number">1</span>)<br>        oldiframe = browser.find_element_by_class_name(<span class="hljs-string">&#x27;g-iframe&#x27;</span>)<br>        browser.switch_to.frame(oldiframe)<br>        SongLink=browser.find_element_by_class_name(<span class="hljs-string">&quot;s-fc7&quot;</span>)   <span class="hljs-comment">#找到歌曲的超链接位置</span><br>        SongLink.click()         <span class="hljs-comment">#点击歌曲超链接</span><br>        url=<span class="hljs-built_in">str</span>(browser.current_url)<br>        <span class="hljs-built_in">print</span>(url)        <span class="hljs-comment">#打印当前的url</span><br>        SongID = url.split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 得到此歌曲的ID</span><br>        <span class="hljs-built_in">print</span>(SongID)  <span class="hljs-comment"># 打印此歌曲的ID</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        SongComments = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//h3[@class=&#x27;u-hd4&#x27;]&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment">#求出最新评论数</span><br>        MaxPage = getMaxPage(SongComments.text)  <span class="hljs-comment"># 获取到评论总页数</span><br>        current = <span class="hljs-number">1</span><br>        is_first = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">if</span> MaxPage&gt;<span class="hljs-number">10</span>:    <span class="hljs-comment">#最多只爬取十页评论</span><br>            MaxPage=<span class="hljs-number">10</span><br>        <span class="hljs-keyword">while</span> current &lt;= MaxPage:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在爬取第&#x27;</span>, current, <span class="hljs-string">&#x27;页的数据&#x27;</span>)<br>            <span class="hljs-keyword">if</span> current == <span class="hljs-number">1</span>:<br>                is_first = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>:<br>                is_first = <span class="hljs-literal">False</span><br>            data_list = get_comments(is_first, browser)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            go_nextpage(browser)<br>            time.sleep(random.randint(<span class="hljs-number">8</span>, <span class="hljs-number">12</span>))<br>            current += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">except</span> URLError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误原因：&quot;</span>+e.reason)<br>    <span class="hljs-keyword">finally</span>:<br>        browser.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    SongName = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入歌曲名：&quot;</span>)<br>    gotoSong(SongName)<br></code></pre></td></tr></table></figure><p>但是该代码有些久远，其中<code>find_element_by_x(&quot;something&quot;)</code> 已经被弃用，现在变为了<code>find_element(&quot;locator&quot;, &quot;something&quot;)</code></p><p>具体而言，参见<a href="https://stackoverflow.com/questions/72773206/selenium-python-attributeerror-webdriver-object-has-no-attribute-find-el%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E9%AB%98%E8%B5%9E%E7%AD%94%E6%A1%88%EF%BC%8C%E9%80%9A%E8%BF%87%E5%BC%95%E5%85%A5%60%60from">https://stackoverflow.com/questions/72773206/selenium-python-attributeerror-webdriver-object-has-no-attribute-find-el的第二个高赞答案，通过引入``from</a> selenium.webdriver.common.by import By&#96;&#96;来确定locator具体是什么：</p><table><thead><tr><th align="left">Old API</th><th align="left">New API</th></tr></thead><tbody><tr><td align="left">find_element_by_id(‘id’)</td><td align="left">find_element(By.ID, ‘id’)</td></tr><tr><td align="left">find_element_by_name(‘name’)</td><td align="left">find_element(By.NAME, ‘name’)</td></tr><tr><td align="left">find_element_by_xpath(‘xpath’)</td><td align="left">find_element(By.XPATH, ‘xpath’)</td></tr><tr><td align="left">find_element_by_class(“class”)</td><td align="left">find_element(By.CLASS_NAME, ‘class’)</td></tr></tbody></table><p>将源代码中的<code>find_element_by_x</code>根据上表进行替换，代码可以成功运行了。但是由于没有本地用户的数据（比如cookie），因此wyyyy中无法登录账号，接下来我们将本地用户的数据直接引入到selenium中。</p><h2 id="引入本地用户的数据"><a href="#引入本地用户的数据" class="headerlink" title="引入本地用户的数据"></a>引入本地用户的数据</h2><p>首先，我们使用<code>webdriver.ChromeOptions()  </code>创建一个选项，该选项用于之后的webdriver加载本地数据和一些自定义的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">profile_dir=<span class="hljs-string">r&quot;C:\Users\Username\AppData\Local\Google\Chrome\User Data&quot;</span>    <span class="hljs-comment"># 对应你的chrome的用户数据存放路径  </span><br>chrome_options=webdriver.ChromeOptions()  <br>chrome_options.add_argument(<span class="hljs-string">&quot;--user-data-dir=&quot;</span> + os.path.abspath(profile_dir))<br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-extensions&quot;</span>) <span class="hljs-comment"># no extension loaded</span><br></code></pre></td></tr></table></figure><p>之后再将<code>chrome_options</code>导入到webdriver中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">browser=webdriver.Chrome(options=chrome_options)<br></code></pre></td></tr></table></figure><p>至此，代码已经可以正常工作并爬取数据。（但是脚本只能在chrome关闭的情况下使用，如果在打开脚本时，chrome已经有页面在运行了，脚本会直接崩溃）</p><h2 id="添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）"><a href="#添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）" class="headerlink" title="添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）"></a>添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）</h2><p>在使用该脚本的时候，发现该脚本只能使用<code>歌曲名</code>进行精确匹配，如果使用<code>歌手名+歌曲名</code>这种形式的模糊搜索，该脚本在搜索结果的页面会失效，对两个搜索结果页面进行对比，发现如下区别：</p><p>精确搜索的歌曲名页面的html结构：</p><p><img src="/./../../../../Downloads/image-20231117061501960.png" alt="image-20231117061501960"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;srchsongst&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w0&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; /song?id=22282046&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Como La Flor&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;s-fc7&quot;</span>&gt;</span>Como La Flor<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td wl&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w2&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span>03:04<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>::after<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag even &quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>模糊搜索的歌曲名页面的html结构：</p><p><img src="/./How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/image-20231117062247088.png" alt="image-20231117062247088"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;srchsongst&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w0&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; /song?id=22282046&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Como La Flor&quot;</span>&gt;</span>Como La Flor<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td wl&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w2&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span>03:04<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>::after<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag even &quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>对比二者可以发现，唯一的区别是精确搜索的<code>&lt;b title=&quot;Como La Flor&quot;&gt;Como La Flor&lt;/b&gt;</code>中多包含了一项<code>&lt;span class=&quot;s-fc7&quot;&gt;&lt;/span&gt;</code>。所以我此处的做法是在<code>srchsongst</code>中选取第一个<code>item f-cb h-flag</code>之后找到其<code>sn</code>选中其中的<code>a</code>即可得到歌曲的<code>id</code>信息</p><p>最后修改过的代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">gotoSearch</span>(<span class="hljs-params">SongName</span>):<br>    browser=webdriver.Chrome(options=chrome_options)<br>    <span class="hljs-keyword">try</span>:<br>        browser.get(<span class="hljs-string">&quot;https://music.163.com/&quot;</span>)<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-built_in">input</span>=browser.find_element(By.ID, <span class="hljs-string">&quot;srch&quot;</span>)  <span class="hljs-comment">#找到搜索栏</span><br>        <span class="hljs-built_in">input</span>.send_keys(SongName)    <span class="hljs-comment">#输入歌曲名</span><br>        <span class="hljs-built_in">input</span>.send_keys(Keys.ENTER)  <span class="hljs-comment">#按下ENTER键</span><br>        time.sleep(<span class="hljs-number">1</span>)<br>        oldiframe = browser.find_element(By.CLASS_NAME, <span class="hljs-string">&#x27;g-iframe&#x27;</span>)  <span class="hljs-comment"># iFrame or Shadow DOM: If the content is inside an iFrame or a Shadow DOM, you need to switch to that context before accessing the elements.</span><br>        browser.switch_to.frame(oldiframe)<br>        wait = WebDriverWait(browser, <span class="hljs-number">1</span>)<br>        srchsongst_div = wait.until(EC.presence_of_element_located((By.CLASS_NAME, <span class="hljs-string">&#x27;srchsongst&#x27;</span>)))<br>        srchsongst_div=browser.find_element(By.CLASS_NAME,<span class="hljs-string">&quot;srchsongst&quot;</span>)   <span class="hljs-comment">#找到歌曲的超链接位置</span><br>        first_child_div = srchsongst_div.find_element(By.CSS_SELECTOR, <span class="hljs-string">&#x27;div.item.f-cb.h-flag&#x27;</span>)<br>        details = first_child_div.find_element(By.CLASS_NAME, <span class="hljs-string">&quot;sn&quot;</span>)<br>        url_element = details.find_element(By.TAG_NAME, <span class="hljs-string">&#x27;a&#x27;</span>)<br>        url = url_element.get_attribute(<span class="hljs-string">&#x27;href&#x27;</span>)<br>        url_element.click()  <span class="hljs-comment"># its different from browser.get(url) but I donnot know why</span><br>        url=<span class="hljs-built_in">str</span>(browser.current_url)<br>        <span class="hljs-built_in">print</span>(url)        <span class="hljs-comment">#打印当前的url</span><br>        SongID = url.split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 得到此歌曲的ID</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SongID&quot;</span>, SongID)  <span class="hljs-comment"># 打印此歌曲的ID</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        SongComments = browser.find_elements(By.XPATH, <span class="hljs-string">&quot;//h3[@class=&#x27;u-hd4&#x27;]&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment">#求出最新评论数</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SongComments&quot;</span>, SongComments)<br>        MaxPage = getMaxPage(SongComments.text)  <span class="hljs-comment"># 获取到评论总页数</span><br>        current = <span class="hljs-number">1</span><br>        is_first = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">if</span> MaxPage&gt;<span class="hljs-number">10</span>:    <span class="hljs-comment">#最多只爬取十页评论</span><br>            MaxPage=<span class="hljs-number">10</span><br>        <span class="hljs-keyword">while</span> current &lt;= MaxPage:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在爬取第&#x27;</span>, current, <span class="hljs-string">&#x27;页的数据&#x27;</span>)<br>            <span class="hljs-keyword">if</span> current == <span class="hljs-number">1</span>:<br>                is_first = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>:<br>                is_first = <span class="hljs-literal">False</span><br>            data_list = get_comments(is_first, browser)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            go_nextpage(browser)<br>            time.sleep(random.randint(<span class="hljs-number">8</span>, <span class="hljs-number">12</span>))<br>            current += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">except</span> URLError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误原因：&quot;</span>+e.reason)<br>    <span class="hljs-keyword">finally</span>:<br>        browser.close()<br></code></pre></td></tr></table></figure><p>ps: 我一开始将<code>url_element.click()</code>改为了<code>browser.get(url)</code>，这样做虽然页面也会跳转到歌曲页面，但是在执行<code>SongComments = browser.find_elements(By.XPATH, &quot;//h3[@class=&#39;u-hd4&#39;]&quot;)[1]  #求出最新评论数</code>会报错，暂时不清楚原因（难道是browser并没有刷新并加载新的页面，导致无法获取这个信息？）</p>]]></content>
    
    
    
    <tags>
      
      <tag>crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SongMASS: Automatic Song Writing with Pre-training and Alignment Constraint</title>
    <link href="/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/"/>
    <url>/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diffusion-LM Improves Controllable Text Generation</title>
    <link href="/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/"/>
    <url>/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/</url>
    
    <content type="html"><![CDATA[<ul><li>method: diffusion</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/09/hello-world/"/>
    <url>/2023/11/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
