<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MIDI and Lyrics Data Preprocess</title>
    <link href="/2023/11/20/MIDI-and-Lyrics-Data-Preprocess/"/>
    <url>/2023/11/20/MIDI-and-Lyrics-Data-Preprocess/</url>
    
    <content type="html"><![CDATA[<h2 id="将netease-music中含有时间轴的歌词全部转移到统一的文件夹下"><a href="#将netease-music中含有时间轴的歌词全部转移到统一的文件夹下" class="headerlink" title="将netease music中含有时间轴的歌词全部转移到统一的文件夹下"></a>将netease music中含有时间轴的歌词全部转移到统一的文件夹下</h2><p>由于并不是所有的歌词信息都含有时间轴，因此我们需要将含有时间轴的歌词先抽取出来。</p><p>基于如下观察，我们可以发现，含有时间轴信息的歌词文件的开头如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;[00:00.00] 作词 : Jeff Keith/Frank Hannon\n[00:00.00] 作曲 : Jeff Keith/Frank Hannon\n[00:00.00] If you can  imagine this,\n[00:19.83]The whole world sharing one big kiss\n[00:26.52]These are thoughts all through my brain,that\n[00:30.24]</span><br></code></pre></td></tr></table></figure><p>而不含有时间轴的歌词文件为如下格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;作词 : Hank Williams\n作曲 : Hank Williams\nGoodbye J</span><br></code></pre></td></tr></table></figure><p>当然，还有一些歌词文件为空：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#x27;&#x27;<br></code></pre></td></tr></table></figure><p>所以我们可以将<code>&quot;[0</code>作为条件判断该歌词文件是否含有时间轴信息。</p><p>过滤的python script如下：</p><p><code>get_lyrcis_by_id.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><br><span class="hljs-comment">#change dir to current dir</span><br>current_path = os.path.dirname(os.path.abspath(__file__))<br>os.chdir(current_path)<br><span class="hljs-built_in">print</span>(current_path)<br><br><br><span class="hljs-comment"># Define the source and destination directories</span><br>source_dir = <span class="hljs-string">f&#x27;./lyrics&#x27;</span><br>destination_dir = <span class="hljs-string">f&#x27;./lyrics with time stamp&#x27;</span><br><br><span class="hljs-comment"># Create the destination directory with a timestamp</span><br>destination_dir = os.path.join(destination_dir)<br>os.makedirs(destination_dir, exist_ok=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># Function to check if the file starts with &#x27;[0&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">starts_with_0</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            data = json.load(file)<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(data).startswith(<span class="hljs-string">&#x27;[0&#x27;</span>) <span class="hljs-keyword">and</span> data != <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">except</span> json.JSONDecodeError:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-comment"># Iterate over files in the source directory</span><br><span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> tqdm(os.listdir(source_dir)):<br>    <span class="hljs-keyword">if</span> filename.endswith(<span class="hljs-string">&#x27;.json&#x27;</span>):<br>        full_path = os.path.join(source_dir, filename)<br>        <span class="hljs-keyword">if</span> starts_with_0(full_path):<br>            shutil.copy(full_path, destination_dir)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Files copy successfully.&quot;</span>)<br></code></pre></td></tr></table></figure><p>之后一共得到了19000多条带有时间轴的数据（一共40000多条数据，netease music上有歌词的就24000条，再滤掉没有时间轴的就只剩19000条了，太难啦，之后还得试试spotify，把spotify的脚本完善一下了跑起来）</p><h2 id="将MIDI文件与lyrics文件做对齐"><a href="#将MIDI文件与lyrics文件做对齐" class="headerlink" title="将MIDI文件与lyrics文件做对齐"></a>将MIDI文件与lyrics文件做对齐</h2><p>接下来使用pretty_midi库尝试将MIDI文件按照lyrics中的时间轴进行切片，从而得到对齐的MIDI音符序列与歌词文本序列对。</p><h3 id="从lyrics的json文件中抽取歌词与对应的时间戳"><a href="#从lyrics的json文件中抽取歌词与对应的时间戳" class="headerlink" title="从lyrics的json文件中抽取歌词与对应的时间戳"></a>从lyrics的json文件中抽取歌词与对应的时间戳</h3><p>此处我是将原本的json文件修改为如下的格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span>(start_time1<span class="hljs-punctuation">,</span> end_time1) <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics1&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span>(start_time2<span class="hljs-punctuation">,</span> end_time2) <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics2&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>... ...<br><span class="hljs-punctuation">&#123;</span>(start_time9<span class="hljs-punctuation">,</span> end_time9) <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics9&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>由于tuple以及list是unhashable的，无法作为python中dict的key，因此将其改为<code>&quot;start_time--end_time&quot;</code>的字符串格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;start_time1--end_time1&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics1&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;start_time2--end_time2&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics2&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>... ...<br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;start_time9--end_time9&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lyrics9&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>以下是代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><br><br><span class="hljs-comment"># change dir to current dir</span><br>current_path = os.path.dirname(os.path.abspath(__file__))<br>os.chdir(current_path)<br><br>min_length = <span class="hljs-number">10</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">time_to_seconds</span>(<span class="hljs-params">time_str</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Convert time string in format MM:SS.mmm to seconds.&quot;&quot;&quot;</span><br>    minutes, seconds = <span class="hljs-built_in">map</span>(<span class="hljs-built_in">float</span>, time_str.split(<span class="hljs-string">&#x27;:&#x27;</span>))<br>    <span class="hljs-keyword">return</span> minutes * <span class="hljs-number">60</span> + seconds<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">parse_lyrics_seconds</span>(<span class="hljs-params">lyrics_data, pop_num_check = <span class="hljs-number">5</span></span>):<br>    <span class="hljs-comment"># Split the data into lines</span><br>    lines = lyrics_data.split(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>    <span class="hljs-comment"># Initialize an empty list to store the dictionaries</span><br>    lyrics_list = []<br><br>    <span class="hljs-comment"># Variables to keep track of the previous and current timestamps in seconds</span><br>    prev_time_sec = <span class="hljs-literal">None</span><br>    prev_lyric = <span class="hljs-literal">None</span><br><br>    <span class="hljs-comment"># Regular expression pattern to match timestamps and lyrics</span><br>    <span class="hljs-comment"># time patterns as MM:SS.mmm, MM:SS.mm, MM:SS,mm or MM:SS</span><br>    <span class="hljs-comment"># lyric patterns as string</span><br>    pattern = <span class="hljs-string">r&#x27;\[(\d+:\d+(?:[.,]\d+)?)](.*)&#x27;</span> <br>    <span class="hljs-comment"># This pattern uses ?: within the milliseconds group to make it a non-capturing group. The ? after it makes the entire milliseconds part optional.</span><br><br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:<br>        <span class="hljs-keyword">match</span> = re.<span class="hljs-keyword">match</span>(pattern, line)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>            <span class="hljs-comment"># print(match)</span><br>            current_time = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>).replace(<span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>)  <span class="hljs-comment"># change , to .</span><br>            lyric = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">2</span>).strip()<br><br>            <span class="hljs-comment"># Convert the current timestamp to seconds</span><br>            current_time_sec = time_to_seconds(current_time)<br><br>            <span class="hljs-comment"># Only add to the list if there is a previous timestamp</span><br>            <span class="hljs-keyword">if</span> prev_time_sec <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> prev_lyric <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                <span class="hljs-comment"># Create a dictionary with the required format</span><br>                time_range = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;prev_time_sec&#125;</span>--<span class="hljs-subst">&#123;current_time_sec&#125;</span>&quot;</span><br>                lyrics_dict = &#123;time_range: prev_lyric&#125;<br>                lyrics_list.append(lyrics_dict)<br><br>            <span class="hljs-comment"># Update the previous timestamp in seconds and previous lyric</span><br>            prev_time_sec = current_time_sec<br>            prev_lyric = lyric<br><br>    <span class="hljs-comment"># the last lyric</span><br>    <span class="hljs-keyword">if</span> prev_time_sec <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> prev_lyric <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        time_range = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;prev_time_sec&#125;</span>--<span class="hljs-subst">&#123;prev_time_sec + <span class="hljs-number">10</span>&#125;</span>&quot;</span>        <br>        lyrics_dict = &#123;time_range: prev_lyric&#125;<br>        lyrics_list.append(lyrics_dict)<br>    <br>    <span class="hljs-comment"># check the first three elements are lyrics or not</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(pop_num_check):<br>        <span class="hljs-keyword">if</span> lyrics_list:<br>            lyric = <span class="hljs-built_in">list</span>(lyrics_list[<span class="hljs-number">0</span>].values())[<span class="hljs-number">0</span>]<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;词&quot;</span> <span class="hljs-keyword">in</span> lyric <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;曲&quot;</span> <span class="hljs-keyword">in</span> lyric:<br>                lyrics_list.pop(<span class="hljs-number">0</span>)<br>    <br>    <span class="hljs-comment"># check if the lyric is empty:</span><br>    lyrics_list = [d <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> lyrics_list <span class="hljs-keyword">if</span> <span class="hljs-built_in">list</span>(d.values())[<span class="hljs-number">0</span>] != <span class="hljs-string">&quot;&quot;</span>]<br><br>    <span class="hljs-keyword">return</span> lyrics_list<br><br><br><span class="hljs-comment"># Define the source and destination directories</span><br><br>source_dir = <span class="hljs-string">f&#x27;./lyrics with time stamp&#x27;</span><br>destination_dir = <span class="hljs-string">f&#x27;./lyrics cut into list with time stamp more than <span class="hljs-subst">&#123;min_length&#125;</span> setences&#x27;</span><br><br><span class="hljs-comment"># Ensure destination directory exists</span><br>os.makedirs(destination_dir, exist_ok=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># Iterate over files in the source directory</span><br><span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> tqdm(os.listdir(source_dir)):<br>    <span class="hljs-keyword">if</span> filename.endswith(<span class="hljs-string">&#x27;.json&#x27;</span>):<br>        source_file_path = os.path.join(source_dir, filename)<br>        destination_file_path = os.path.join(destination_dir, filename)<br><br>        <span class="hljs-comment"># Read the content of the source file</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(source_file_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>            <span class="hljs-comment"># print(filename)</span><br>            data = json.load(file)<br>        <span class="hljs-comment"># Process the data</span><br>        processed_data = parse_lyrics_seconds(data)<br><br>        <span class="hljs-comment"># Save the processed data to the destination file</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(processed_data) &gt; min_length:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(destination_file_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>                json.dump(processed_data, file, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">4</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;All files processed and saved.&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="根据lyrics中的时间信息对midi文件进行分片"><a href="#根据lyrics中的时间信息对midi文件进行分片" class="headerlink" title="根据lyrics中的时间信息对midi文件进行分片"></a>根据lyrics中的时间信息对midi文件进行分片</h3><p>设计数据结构如下图所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;lyrics&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Just beat it, beat it, beat it&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;notes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;Piano&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>..<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>p<span class="hljs-punctuation">,</span> v<span class="hljs-punctuation">,</span> s<span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;Drum&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>..<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>p<span class="hljs-punctuation">,</span> v<span class="hljs-punctuation">,</span> s<span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    ...<br>        <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;Violin&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>pitch<span class="hljs-punctuation">,</span> velocity<span class="hljs-punctuation">,</span> start_time<span class="hljs-punctuation">,</span> duration<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>..<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">[</span>p<span class="hljs-punctuation">,</span> v<span class="hljs-punctuation">,</span> s<span class="hljs-punctuation">,</span> d<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>每一个片段为一个dict，包含两组kv对，第一组是歌词，key为字符串“lyrics”， value即是歌词的字符串。第二组是notes，他是一个list，每一个元素也是一个lIst，其中第一个元素是乐器名，第二个元素是乐器名对应的编号（该编号由pretty_midi提取得到，样例中的数字是随便写的，不代表真实编号），从第三个元素开始都是一个list，对应一个note，其中四元组分别是音高，响度，开始时间，持续时间。</p><p>之所以这样设计数据结构，是因为每一个片段的midi文件中，可能有不止一个乐器，而每个乐器对应一组音符，这里的想法是将这些信息全部抽取出来，之后每一个乐器作为输入数据中的一个channel输入给模型（具体设计暂定）</p><p>在代码实现中，将切好的midi片段也一并保存下来，即既保存片段的midi文件，亦保存其json文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pretty_midi<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cut_midi</span>(<span class="hljs-params">input_file, output_file, start_time, end_time</span>):<br>    <span class="hljs-comment"># Load the MIDI file</span><br>    original_midi = pretty_midi.PrettyMIDI(input_file)<br>    <br>    <span class="hljs-comment"># Create a new MIDI object</span><br>    new_midi = pretty_midi.PrettyMIDI()<br><br>    <span class="hljs-comment"># Process each instrument</span><br>    <span class="hljs-keyword">for</span> instrument <span class="hljs-keyword">in</span> original_midi.instruments:<br>        <span class="hljs-comment"># Create a new instrument</span><br>        new_instrument = pretty_midi.Instrument(program=instrument.program, is_drum=instrument.is_drum)<br>        <br>        <span class="hljs-comment"># Process each note</span><br>        <span class="hljs-keyword">for</span> note <span class="hljs-keyword">in</span> instrument.notes:<br>            <span class="hljs-keyword">if</span> start_time &lt;= note.start &lt; end_time:<br>                <span class="hljs-comment"># Adjust note start and end times relative to the new start</span><br>                new_note = pretty_midi.Note(velocity=note.velocity, <br>                                            pitch=note.pitch, <br>                                            start=note.start - start_time, <br>                                            end=<span class="hljs-built_in">min</span>(note.end, end_time) - start_time)<br>                new_instrument.notes.append(new_note)<br>        <br>        new_midi.instruments.append(new_instrument)<br><br>    <span class="hljs-comment"># Save the new MIDI file</span><br>    new_midi.write(output_file)<br><br><span class="hljs-comment"># Example usage</span><br>cut_midi(<span class="hljs-string">&#x27;path/to/original.mid&#x27;</span>, <span class="hljs-string">&#x27;path/to/new_file.mid&#x27;</span>, <span class="hljs-number">30</span>, <span class="hljs-number">60</span>)  <span class="hljs-comment"># cuts between 30s and 60s</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>data process</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fine-Grained Controllable Text Generation Using Non-Residual Prompting (ACL2022)</title>
    <link href="/2023/11/20/Fine-Grained-Controllable-Text-Generation-Using-Non-Residual-Prompting/"/>
    <url>/2023/11/20/Fine-Grained-Controllable-Text-Generation-Using-Non-Residual-Prompting/</url>
    
    <content type="html"><![CDATA[<p>本文针对传统的CLM（Casual language model(next token prediction)）控制文本生成中引入condition出现的两个问题进行修正，使生成文本更好更灵活的受控。</p><h2 id="两个问题"><a href="#两个问题" class="headerlink" title="两个问题"></a>两个问题</h2><h3 id="长距离依赖（Postional-Variance）"><a href="#长距离依赖（Postional-Variance）" class="headerlink" title="长距离依赖（Postional Variance）"></a>长距离依赖（Postional Variance）</h3><p><img src="/.com//ezgif-5-6e47d1f7eb.gif" alt="[animate output image]"></p><p>这个问题在于随着生成的context的越来越长，传统的CLM会较为平均的关注prompt tokens以及之前生成的context tokens从而使得后期生成的context tokens受prompt tokens越来越小</p><h3 id="条件污染（Condition-Prompt-pollution）"><a href="#条件污染（Condition-Prompt-pollution）" class="headerlink" title="条件污染（Condition&#x2F;Prompt pollution）"></a>条件污染（Condition&#x2F;Prompt pollution）</h3><p><img src="/.com//ezgif-4-f90acb32a5.gif" alt="ezgif-4-f90acb32a5"></p><p>此问题在于，由于传统的CLM是将Prompt tokens作为prefix tokens的一部分输入给同一个text decoder，由于transformer的结构，那么generated token的embedding就会与prompt token的embedding由attention机制融合到一起，当模型在生成过程中如果需要转换prompt token，之前的prompt token由于已经与已生成的text token在embedding层面融合，所以没有办法在切换新prompt token后抹除旧prompt token对后续文本生成的影响，除非重新计算之前的text token与prompt的attention从而得到新的embedding（这样会带来更大的计算开销）</p><h2 id="解决问题的两个手段"><a href="#解决问题的两个手段" class="headerlink" title="解决问题的两个手段"></a>解决问题的两个手段</h2><p><img src="/.com//image-20231120112727686.png" alt="image-20231120112727686"></p><p>本文通过：</p><ul><li><p>将Prompt token单独使用一个CLM进行处理，与负责生成context token的CLM进行解耦，从而部分程度缓解条件污染问题。</p></li><li><p>针对生成context token的CLM，让其拥有两组不同的embedding，两组embedding的生成方式不同，从而解决长距离依赖问题。</p></li></ul><h3 id="模型的工作流程"><a href="#模型的工作流程" class="headerlink" title="模型的工作流程"></a>模型的工作流程</h3><p><img src="/.com//ezgif-2-2668dcd654.gif" alt="ezgif-2-2668dcd654"></p><p>一个更加形象的例子为：</p><p><img src="/.com//ezgif-4-f53d79f5a8.gif" alt="ezgif-4-f53d79f5a8"></p><p>最后观察这一张图，prompt token的embedding是作为cross attention中的kv（待验证)与context token做cross attention，通过这种方式从而缓解长距离依赖的问题：</p><p>![Screenshot 2023-11-20 at 11.54.43](Fine-Grained-Controllable-Text-Generation-Using-Non-Residual-Prompting&#x2F;Screenshot 2023-11-20 at 11.54.43.png)</p><p>可以观察到：</p><ul><li>在context CLM中，绿色的hidden states代表context stream，这一部分的生成只取决于context states之前的绿色的context hidden states而与红色的promt hidden states无关。</li><li>在context CLM中，黄色的hidden states（对应了gif动图中蓝色三角形）代表non-residual stream，这一部分hidden states与之前步中的绿色的context hidden states做fusion后作为query再与红色的prompt hidden states做cross attention，最终由这一部分作为预测下一个词的判据。</li></ul><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><p>这是其仓库地址： <a href="https://github.com/FreddeFrallan/Non-Residual-Prompting">https://github.com/FreddeFrallan/Non-Residual-Prompting</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to crawl lyrics from spotify with syrics and spotipy</title>
    <link href="/2023/11/19/How-to-crawl-lyrics-from-spotify-with-syrics-and-spotipy/"/>
    <url>/2023/11/19/How-to-crawl-lyrics-from-spotify-with-syrics-and-spotipy/</url>
    
    <content type="html"><![CDATA[<p>由于几乎所有的音乐网站在组织形式上都是以预先设定好的track id记录歌曲，因此与之前的思路相似，整个脚本仍然分为两个阶段：获取歌曲对应的trackid，再根据trackid获取歌词，此处，通过搜索获取trackid使用spotipy实现，而根据trackid获取歌词使用syrics实现。</p><h2 id="利用spotipy通过歌曲名-歌手名搜索获取trackid"><a href="#利用spotipy通过歌曲名-歌手名搜索获取trackid" class="headerlink" title="利用spotipy通过歌曲名+歌手名搜索获取trackid"></a>利用spotipy通过歌曲名+歌手名搜索获取trackid</h2><h2 id="利用syrics通过trackid获取歌词"><a href="#利用syrics通过trackid获取歌词" class="headerlink" title="利用syrics通过trackid获取歌词"></a>利用syrics通过trackid获取歌词</h2><h3 id="获取spotify中的user-cookie（sp-dc）"><a href="#获取spotify中的user-cookie（sp-dc）" class="headerlink" title="获取spotify中的user cookie（sp_dc）"></a>获取spotify中的user cookie（sp_dc）</h3><p>由于我现在的chrome的版本为119.0.6045.160，已经无法通过直接在setting的cookie中查看具体cookie的数值。只能通过打开 <a href="https://open.spotify.com/">https://open.spotify.com/</a> ，之后按下F12进入开发者模式，在application中的左侧菜单栏中storage中选择cookie，在其中选择open.spotify.com，之后在列出的一系列cookie中找到sp_dc，复制出来即可。</p><h3 id="使用cookie以及trackid进行歌词获取"><a href="#使用cookie以及trackid进行歌词获取" class="headerlink" title="使用cookie以及trackid进行歌词获取"></a>使用cookie以及trackid进行歌词获取</h3><p>此处直接参考 <a href="https://github.com/akashrchandran/syrics">https://github.com/akashrchandran/syrics</a> readme中最后一段 Use as a module 获取歌词，即：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> syrics.api <span class="hljs-keyword">import</span> Spotify<br>sp = Spotify(sp_dc)<br>sp.get_lyrics(<span class="hljs-string">&quot;1OOtq8tRnDM8kG2gqUPjAj&quot;</span>)<br>&#123;<span class="hljs-string">&#x27;lyrics&#x27;</span>: &#123;<span class="hljs-string">&#x27;syncType&#x27;</span>: <span class="hljs-string">&#x27;LINE_SYNCED&#x27;</span>, <br>            <span class="hljs-string">&#x27;lines&#x27;</span>: [&#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;38190&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;They told him don&#x27;t you ever&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;39740&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;come around here&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;41250&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;Don&#x27;t wanna see your face&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;42600&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;you better disappear&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;44710&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;The fire&#x27;s in their eyes&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;46250&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and the words are really clear&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;47930&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;So beat it just beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;52100&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;You better run&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;52890&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;you better do what you can&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;55110&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;Don&#x27;t wanna see no blood&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;56380&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;don&#x27;t be a macho man oh&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;58540&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;You wanna be tough&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;60020&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;better do what you can&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;61740&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;So beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;63500&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;but you wanna be bad&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;65180&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;67430&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;68890&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;72340&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;73830&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;75820&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;77520&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;79010&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;80760&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;82460&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;84270&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it oh&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;86630&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;They&#x27;re out to get you&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;87710&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;better leave while you can&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;89630&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;Don&#x27;t wanna be a boy&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;90910&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;you wanna be a man&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;93110&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;You wanna stay alive&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;94580&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;better do what you can&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;96310&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;So beat it da just beat it du&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;100470&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;You have to show them&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;101500&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;that you&#x27;re really not scared&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;103510&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;You&#x27;re playing with your life&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;104710&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;this ain&#x27;t no truth or dare oh&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;106930&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;They&#x27;ll kick you&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;107520&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;then they beat you&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;108380&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;Then they&#x27;ll tell you it&#x27;s fair&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;110090&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;So beat it da&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;111870&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;but you wanna be bad&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;113530&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;115740&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;117250&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;120740&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;122270&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;124140&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;125870&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;127400&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;129570&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;131060&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;134510&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;136160&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;137990&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;139720&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;141140&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;144230&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;151160&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;153740&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;160690&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;162050&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;♪&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;197020&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;198790&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;200250&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;203580&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;205260&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;207100&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;208870&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;210260&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;212550&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;214020&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;216170&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;oh no&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;217480&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;218930&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;220900&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;222650&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;224140&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;226330&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;227860&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;229980&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;oh no&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;231300&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;232920&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;234750&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;236500&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;237950&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;240180&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;241660&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;No one wants to be defeated&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;245040&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Showing how funky&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;246700&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;and strong is your fight&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;248590&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;It doesn&#x27;t matter&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;250310&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&quot;who&#x27;s wrong or right&quot;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;251790&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;Just beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-string">&#x27;startTimeMs&#x27;</span>: <span class="hljs-string">&#x27;254040&#x27;</span>, <span class="hljs-string">&#x27;words&#x27;</span>: <span class="hljs-string">&#x27;beat it beat it&#x27;</span>, <span class="hljs-string">&#x27;syllables&#x27;</span>: [], <span class="hljs-string">&#x27;endTimeMs&#x27;</span>: <span class="hljs-string">&#x27;0&#x27;</span>&#125;], <br>            <span class="hljs-string">&#x27;provider&#x27;</span>: <span class="hljs-string">&#x27;syncpower&#x27;</span>, <br>            <span class="hljs-string">&#x27;providerLyricsId&#x27;</span>: <span class="hljs-string">&#x27;280721&#x27;</span>, <br>            <span class="hljs-string">&#x27;providerDisplayName&#x27;</span>: <span class="hljs-string">&#x27;プチリリ&#x27;</span>, <br>            <span class="hljs-string">&#x27;syncLyricsUri&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;isDenseTypeface&#x27;</span>: <span class="hljs-literal">False</span>, <br>            <span class="hljs-string">&#x27;alternatives&#x27;</span>: [], <span class="hljs-string">&#x27;language&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>, <br>            <span class="hljs-string">&#x27;isRtlLanguage&#x27;</span>: <span class="hljs-literal">False</span>, <br>            <span class="hljs-string">&#x27;fullscreenAction&#x27;</span>: <span class="hljs-string">&#x27;FULLSCREEN_LYRICS&#x27;</span>, <br>            <span class="hljs-string">&#x27;showUpsell&#x27;</span>: <span class="hljs-literal">False</span>&#125;, <br> <span class="hljs-string">&#x27;colors&#x27;</span>: &#123;<span class="hljs-string">&#x27;background&#x27;</span>: -<span class="hljs-number">1694671</span>, <span class="hljs-string">&#x27;text&#x27;</span>: -<span class="hljs-number">16777216</span>, <span class="hljs-string">&#x27;highlightText&#x27;</span>: -<span class="hljs-number">1</span>&#125;, <br> <span class="hljs-string">&#x27;hasVocalRemoval&#x27;</span>: <span class="hljs-literal">False</span>&#125;<br></code></pre></td></tr></table></figure><p>第二行的<code>sp_dc</code>即是之前获取的cookie，填入程序即可。上述为<code>Machael Jackson</code>的<code>Beat It</code>的歌词。可以发现，其中含有时间轴，这正是我们需要的，分析以下返回的文本格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>&#x27;lyrics&#x27;<span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        &#x27;syncType&#x27;<span class="hljs-punctuation">:</span> &#x27;LINE_SYNCED&#x27;<span class="hljs-punctuation">,</span><br>        &#x27;lines&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span>&#x27;startTimeMs&#x27;<span class="hljs-punctuation">:</span> &#x27;<span class="hljs-number">38190</span>&#x27;<span class="hljs-punctuation">,</span> <br>             &#x27;words&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;They told him don&#x27;t you ever&quot;</span><span class="hljs-punctuation">,</span> <br>             &#x27;syllables&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>             &#x27;endTimeMs&#x27;<span class="hljs-punctuation">:</span> &#x27;<span class="hljs-number">0</span>&#x27;<span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-punctuation">&#123;</span>&#x27;startTimeMs&#x27;<span class="hljs-punctuation">:</span> &#x27;<span class="hljs-number">39740</span>&#x27;<span class="hljs-punctuation">,</span> <br>             &#x27;words&#x27;<span class="hljs-punctuation">:</span> &#x27;come around here&#x27;<span class="hljs-punctuation">,</span> <br>             &#x27;syllables&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <br>             &#x27;endTimeMs&#x27;<span class="hljs-punctuation">:</span> &#x27;<span class="hljs-number">0</span>&#x27;<span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            ....<br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            &#x27;provider&#x27;<span class="hljs-punctuation">:</span> &#x27;syncpower&#x27;<span class="hljs-punctuation">,</span> <br>            &#x27;providerLyricsId&#x27;<span class="hljs-punctuation">:</span> &#x27;<span class="hljs-number">280721</span>&#x27;<span class="hljs-punctuation">,</span> <br>            &#x27;providerDisplayName&#x27;<span class="hljs-punctuation">:</span> &#x27;プチリリ&#x27;<span class="hljs-punctuation">,</span> <br>            &#x27;syncLyricsUri&#x27;<span class="hljs-punctuation">:</span> &#x27;&#x27;<span class="hljs-punctuation">,</span> &#x27;isDenseTypeface&#x27;<span class="hljs-punctuation">:</span> False<span class="hljs-punctuation">,</span> <br>            &#x27;alternatives&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> &#x27;language&#x27;<span class="hljs-punctuation">:</span> &#x27;&#x27;<span class="hljs-punctuation">,</span> <br>            &#x27;isRtlLanguage&#x27;<span class="hljs-punctuation">:</span> False<span class="hljs-punctuation">,</span> <br>            &#x27;fullscreenAction&#x27;<span class="hljs-punctuation">:</span> &#x27;FULLSCREEN_LYRICS&#x27;<span class="hljs-punctuation">,</span> <br>            &#x27;showUpsell&#x27;<span class="hljs-punctuation">:</span> False<span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>     &#x27;colors&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span>&#x27;background&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-number">-1694671</span><span class="hljs-punctuation">,</span> &#x27;text&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-number">-16777216</span><span class="hljs-punctuation">,</span> &#x27;highlightText&#x27;<span class="hljs-punctuation">:</span> <span class="hljs-number">-1</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span> <br>     &#x27;hasVocalRemoval&#x27;<span class="hljs-punctuation">:</span> False<span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>可以观察到返回的json文件（已经是python的dict类型）由<code>lyrics</code>，<code>colors</code>，<code>hasVocalRemoval</code>三部分组成，而我们需要的带有时间戳的歌词就在<code>lyrics</code>的<code>lines</code>中，其是一个以每个时间戳为单位的list，每一个单位是一个dict，其中包含歌词的起止时间，歌词。这就是我们所需要的信息。</p><p>接下来下使用下列代码将其单独收集出来即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">metadata = sp.get_lyrics(<span class="hljs-string">&quot;1OOtq8tRnDM8kG2gqUPjAj&quot;</span>)<br><span class="hljs-comment"># print(type(a)) return is a dict type object</span><br>lyrics = metadata[<span class="hljs-string">&quot;lyrics&quot;</span>][<span class="hljs-string">&quot;lines&quot;</span>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Poco X4 GT insert magisk into ROM</title>
    <link href="/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/"/>
    <url>/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/</url>
    
    <content type="html"><![CDATA[<h2 id="下载并使用magisk刷写boot-img"><a href="#下载并使用magisk刷写boot-img" class="headerlink" title="下载并使用magisk刷写boot.img"></a>下载并使用magisk刷写boot.img</h2><p>首先下载对应版本的线刷包（Fastboot），下载网址：<a href="https://xiaomifirmwareupdater.com/miui/xaga/">https://xiaomifirmwareupdater.com/miui/xaga/</a></p><p>我是全球版本的ROM，因此选择Global版本：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013552213.png" alt="image-20231117013552213"></p><p>之后将压缩包中的boot.img文件提取出来：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013714839.png" alt="image-20231117013714839"></p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117013736077.png" alt="image-20231117013736077"></p><p>然后导入手机，打开magisk选择install（Magisk旁的install）：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014224668.png" alt="image-20231117014224668"></p><p>选择boot.img之后点击let’s go：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014218823.png" alt="image-20231117014218823"></p><p>最后等待刷写完成：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014359917.png" alt="image-20231117014359917"></p><h2 id="使用adb将boot-img重新刷写入系统"><a href="#使用adb将boot-img重新刷写入系统" class="headerlink" title="使用adb将boot.img重新刷写入系统"></a>使用adb将boot.img重新刷写入系统</h2><p>首先确保fastboot是否能够检测到设别，如果不能的话，需要先使用MiUsbDriver打好驱动：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014642200.png" alt="image-20231117014642200"></p><p>之后使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot devices<br></code></pre></td></tr></table></figure><p>查看连接到电脑上的手机设备是否已经被识别到：</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117014813735.png" alt="image-20231117014813735"></p><p>如果被成功识别，会显示上述文本</p><p>之后使用如下命令刷写boot.img分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot flash boot_ab &#123;your_magisk_boot.img&#125;<br></code></pre></td></tr></table></figure><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117015153873.png" alt="image-20231117015153873"></p><p>（该命令源自于刷机包中的<code> flash_all.bat</code>文件）</p><p><img src="/./Poco-X4-GT-insert-magisk-into-ROM/image-20231117015333584.png" alt="image-20231117015333584"></p><p>至此，刷写完成。（但我现在的状况是magisk内显示没有root但lsposed可以正常工作，很迷）</p><h2 id="提取系统中的boot-img（需要root权限）"><a href="#提取系统中的boot-img（需要root权限）" class="headerlink" title="提取系统中的boot.img（需要root权限）"></a>提取系统中的boot.img（需要root权限）</h2><p>使用termux命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">su                       <span class="hljs-comment"># get superuser right otherwise cannot access to location below</span><br><span class="hljs-built_in">cd</span> /dev/block/by-name    <span class="hljs-comment"># to find the location of boot.img</span><br><span class="hljs-built_in">ls</span> -l boot_a             <span class="hljs-comment"># check boot.img location (ls -l boot_b is also OK)</span><br></code></pre></td></tr></table></figure><p>it shows as below:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">boot_a -&gt; /dev/block/sdc43<br>boot_b -&gt; /dev/block/sdc72<br></code></pre></td></tr></table></figure><p>使用dd将整个img分区拷贝下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/block/sdc43 of=/sdcard/boot_a.img<br><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/block/sdc72 of=/sdcard/boot_b.img<br></code></pre></td></tr></table></figure><p>使用windows cmd计算各个镜像的md5，可以发现两个分区的md5是一样的，就连我刷magisk前后md5都一样，但是magisk还是显示没有root权限，而lsposed却可以正常工作，就很迷。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">certutil -hashfile magisk_patched-26400_sQ8kK.img md5<br>MD5 <span class="hljs-built_in">hash</span> of magisk_patched-26400_sQ8kK.img:<br>6e0117983a8df1ed946b09e7ac1de741<br>CertUtil: -hashfile <span class="hljs-built_in">command</span> completed successfully.<br><br>certutil -hashfile boot_a.img md5<br>MD5 <span class="hljs-built_in">hash</span> of boot_a.img:<br>6e0117983a8df1ed946b09e7ac1de741<br>CertUtil: -hashfile <span class="hljs-built_in">command</span> completed successfully.<br><br>certutil -hashfile boot_b.img md5<br>MD5 <span class="hljs-built_in">hash</span> of boot_a.img:<br>6e0117983a8df1ed946b09e7ac1de741<br>CertUtil: -hashfile <span class="hljs-built_in">command</span> completed successfully.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to crawl lyrics and music data from netease music with artist&#39;s name and song&#39;s name</title>
    <link href="/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/"/>
    <url>/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/</url>
    
    <content type="html"><![CDATA[<h2 id="参考的源码以及新版selenium的api修改"><a href="#参考的源码以及新版selenium的api修改" class="headerlink" title="参考的源码以及新版selenium的api修改"></a>参考的源码以及新版selenium的api修改</h2><p>根据 <a href="https://blog.51cto.com/u_13403836/5674642">https://blog.51cto.com/u_13403836/5674642</a> 中的代码，其中有基于selenium得到歌曲id的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<br><span class="hljs-keyword">from</span> urllib.error <span class="hljs-keyword">import</span> URLError<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> random<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">无界面模式代码</span><br><span class="hljs-string">chrome_options=webdriver.ChromeOptions()</span><br><span class="hljs-string">chrome_options.add_argument(&quot;--headless&quot;)</span><br><span class="hljs-string">browser = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getMaxPage</span>(<span class="hljs-params">SongComments</span>):<br>    max_page = SongComments.split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>]  <span class="hljs-comment">#从字符串中解析出评论数</span><br>    offset = <span class="hljs-number">20</span>  <span class="hljs-comment"># 每页显示20条最新评论</span><br>    max_page = math.ceil(<span class="hljs-built_in">int</span>(max_page) / offset)  <span class="hljs-comment">#求出总的评论页数</span><br>    <span class="hljs-keyword">return</span> max_page  <span class="hljs-comment">#返回评论页数</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">go_nextpage</span>(<span class="hljs-params">browser</span>):  <span class="hljs-comment">#模拟人为操作，点击【下一页】</span><br>    next_button = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;m-cmmt&#x27;]/div[3]/div[1]/a&quot;</span>)[-<span class="hljs-number">1</span>]  <span class="hljs-comment">#获取到下一页按钮的位置</span><br>    browser.execute_script(<span class="hljs-string">&quot;window.scrollTo(0, document.body.scrollHeight)&quot;</span>);  <span class="hljs-comment">#拉动滚动条到浏览器底部</span><br>    <span class="hljs-keyword">if</span> next_button.text == <span class="hljs-string">&#x27;下一页&#x27;</span>:<br>        next_button.click()          <span class="hljs-comment">#点击下一页</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_comments</span>(<span class="hljs-params">is_first, browser</span>):   <span class="hljs-comment">#获取评论数据</span><br>    items = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//div[@class=&#x27;cmmts j-flag&#x27;]/div[@class=&#x27;itm&#x27;]&quot;</span>)<br>    <span class="hljs-comment"># 首页的数据中包含15条精彩评论，20条最新评论，只保留最新评论</span><br>    <span class="hljs-keyword">if</span> is_first:      <span class="hljs-comment">#如果是第一页</span><br>        items = items[<span class="hljs-number">15</span>: <span class="hljs-built_in">len</span>(items)]<br>    data_list = []<br>    data = &#123;&#125;<br>    <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> items:<br>        <span class="hljs-comment"># 用户id</span><br>        userId = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;head&#x27;]/a&quot;</span>)[<span class="hljs-number">0</span>]<br>        userId = userId.get_attribute(<span class="hljs-string">&#x27;href&#x27;</span>).split(<span class="hljs-string">&#x27;=&#x27;</span>)[<span class="hljs-number">1</span>]<br>        <span class="hljs-comment"># 用户昵称</span><br>        nickname = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[1]/div[1]/a&quot;</span>)[<span class="hljs-number">0</span>]<br>        nickname = nickname.text<br>        <span class="hljs-comment"># 评论内容</span><br>        content = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[1]/div[1]&quot;</span>)[<span class="hljs-number">0</span>]<br>        content = content.text.split(<span class="hljs-string">&#x27;：&#x27;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 中文冒号</span><br>        <span class="hljs-comment"># 点赞数</span><br>        like = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;cntwrap&#x27;]/div[@class=&#x27;rp&#x27;]/a[1]&quot;</span>)[<span class="hljs-number">0</span>]<br>        like = like.text<br>        <span class="hljs-keyword">if</span> like:<br>            like = like.strip().split(<span class="hljs-string">&#x27;(&#x27;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&#x27;)&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">else</span>:<br>            like = <span class="hljs-string">&#x27;0&#x27;</span><br>        <span class="hljs-comment"># 头像地址</span><br>        avatar = each.find_elements_by_xpath(<span class="hljs-string">&quot;./div[@class=&#x27;head&#x27;]/a/img&quot;</span>)[<span class="hljs-number">0</span>]<br>        avatar = avatar.get_attribute(<span class="hljs-string">&#x27;src&#x27;</span>)<br><br>        data[<span class="hljs-string">&#x27;userId&#x27;</span>] = userId<br>        data[<span class="hljs-string">&#x27;nickname&#x27;</span>] = nickname<br>        data[<span class="hljs-string">&#x27;content&#x27;</span>] = content<br>        data[<span class="hljs-string">&#x27;like&#x27;</span>] = like<br>        data[<span class="hljs-string">&#x27;avatar&#x27;</span>] = avatar<br>        <span class="hljs-built_in">print</span>(data)<br>        data_list.append(data)<br>        data = &#123;&#125;<br>    <span class="hljs-keyword">return</span> data_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gotoSong</span>(<span class="hljs-params">SongName</span>):<br>    <span class="hljs-keyword">try</span>:<br>        browser=webdriver.Chrome()<br>        browser.get(<span class="hljs-string">&quot;https://music.163.com/&quot;</span>)<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-built_in">input</span>=browser.find_element_by_id(<span class="hljs-string">&quot;srch&quot;</span>)  <span class="hljs-comment">#找到搜索栏</span><br>        <span class="hljs-built_in">input</span>.send_keys(SongName)    <span class="hljs-comment">#输入歌曲名</span><br>        <span class="hljs-built_in">input</span>.send_keys(Keys.ENTER)  <span class="hljs-comment">#按下ENTER键</span><br>        time.sleep(<span class="hljs-number">1</span>)<br>        oldiframe = browser.find_element_by_class_name(<span class="hljs-string">&#x27;g-iframe&#x27;</span>)<br>        browser.switch_to.frame(oldiframe)<br>        SongLink=browser.find_element_by_class_name(<span class="hljs-string">&quot;s-fc7&quot;</span>)   <span class="hljs-comment">#找到歌曲的超链接位置</span><br>        SongLink.click()         <span class="hljs-comment">#点击歌曲超链接</span><br>        url=<span class="hljs-built_in">str</span>(browser.current_url)<br>        <span class="hljs-built_in">print</span>(url)        <span class="hljs-comment">#打印当前的url</span><br>        SongID = url.split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 得到此歌曲的ID</span><br>        <span class="hljs-built_in">print</span>(SongID)  <span class="hljs-comment"># 打印此歌曲的ID</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        SongComments = browser.find_elements_by_xpath(<span class="hljs-string">&quot;//h3[@class=&#x27;u-hd4&#x27;]&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment">#求出最新评论数</span><br>        MaxPage = getMaxPage(SongComments.text)  <span class="hljs-comment"># 获取到评论总页数</span><br>        current = <span class="hljs-number">1</span><br>        is_first = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">if</span> MaxPage&gt;<span class="hljs-number">10</span>:    <span class="hljs-comment">#最多只爬取十页评论</span><br>            MaxPage=<span class="hljs-number">10</span><br>        <span class="hljs-keyword">while</span> current &lt;= MaxPage:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在爬取第&#x27;</span>, current, <span class="hljs-string">&#x27;页的数据&#x27;</span>)<br>            <span class="hljs-keyword">if</span> current == <span class="hljs-number">1</span>:<br>                is_first = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>:<br>                is_first = <span class="hljs-literal">False</span><br>            data_list = get_comments(is_first, browser)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            go_nextpage(browser)<br>            time.sleep(random.randint(<span class="hljs-number">8</span>, <span class="hljs-number">12</span>))<br>            current += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">except</span> URLError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误原因：&quot;</span>+e.reason)<br>    <span class="hljs-keyword">finally</span>:<br>        browser.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    SongName = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入歌曲名：&quot;</span>)<br>    gotoSong(SongName)<br></code></pre></td></tr></table></figure><p>但是该代码有些久远，其中<code>find_element_by_x(&quot;something&quot;)</code> 已经被弃用，现在变为了<code>find_element(&quot;locator&quot;, &quot;something&quot;)</code></p><p>具体而言，参见 <a href="https://stackoverflow.com/questions/72773206/selenium-python-attributeerror-webdriver-object-has-no-attribute-find-el">https://stackoverflow.com/questions/72773206/selenium-python-attributeerror-webdriver-object-has-no-attribute-find-el</a> 的第二个高赞答案，通过引入<code>from selenium.webdriver.common.by import By</code>来确定locator具体是什么：</p><table><thead><tr><th align="left">Old API</th><th align="left">New API</th></tr></thead><tbody><tr><td align="left">find_element_by_id(‘id’)</td><td align="left">find_element(By.ID, ‘id’)</td></tr><tr><td align="left">find_element_by_name(‘name’)</td><td align="left">find_element(By.NAME, ‘name’)</td></tr><tr><td align="left">find_element_by_xpath(‘xpath’)</td><td align="left">find_element(By.XPATH, ‘xpath’)</td></tr><tr><td align="left">find_element_by_class(“class”)</td><td align="left">find_element(By.CLASS_NAME, ‘class’)</td></tr></tbody></table><p>将源代码中的<code>find_element_by_x</code>根据上表进行替换，代码可以成功运行了。但是由于没有本地用户的数据（比如cookie），因此wyyyy中无法登录账号，接下来我们将本地用户的数据直接引入到selenium中。</p><h2 id="引入本地用户的数据跳过账号登录"><a href="#引入本地用户的数据跳过账号登录" class="headerlink" title="引入本地用户的数据跳过账号登录"></a>引入本地用户的数据跳过账号登录</h2><p>首先，我们使用<code>webdriver.ChromeOptions()  </code>创建一个选项，该选项用于之后的webdriver加载本地数据和一些自定义的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">profile_dir=<span class="hljs-string">r&quot;C:\Users\Username\AppData\Local\Google\Chrome\User Data&quot;</span>    <span class="hljs-comment"># 对应你的chrome的用户数据存放路径  </span><br>chrome_options=webdriver.ChromeOptions()  <br>chrome_options.add_argument(<span class="hljs-string">&quot;--user-data-dir=&quot;</span> + os.path.abspath(profile_dir))<br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-extensions&quot;</span>) <span class="hljs-comment"># no extension loaded</span><br></code></pre></td></tr></table></figure><p>之后再将<code>chrome_options</code>导入到webdriver中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">browser=webdriver.Chrome(options=chrome_options)<br></code></pre></td></tr></table></figure><p>至此，代码已经可以正常工作并爬取数据。（但是脚本只能在chrome关闭的情况下使用，如果在打开脚本时，chrome已经有页面在运行了，脚本会直接崩溃）</p><h3 id="解决崩溃问题"><a href="#解决崩溃问题" class="headerlink" title="解决崩溃问题"></a>解决崩溃问题</h3><p>可以通过如下两点（主要是第二点）解决：</p><ul><li><p>加入headless等参数以及将 <code>user data</code> 复制一份到其他地方（主要是用户与selenium或者多个selenium不能共享<code>user data</code>文件夹，需要独占）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">chrome_options.add_argument(<span class="hljs-string">&quot;--headless&quot;</span>)  <span class="hljs-comment"># Run Chrome in headless mode</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--no-sandbox&quot;</span>) <span class="hljs-comment"># Bypass OS security model</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-dev-shm-usage&quot;</span>) <span class="hljs-comment"># Overcome limited resource problems</span><br>chrome_options.add_argument(<span class="hljs-string">&#x27;--disable-gpu&#x27;</span>)  <span class="hljs-comment"># Disable GPU for headless mode</span><br></code></pre></td></tr></table></figure></li><li><p>并将<code>profile_dir=r&quot;C:\Users\Username\AppData\Local\Google\Chrome\User Data&quot;    # 对应你的chrome的用户数据存放路径  </code> 切换至对应地方解决。</p></li></ul><h2 id="添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）"><a href="#添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）" class="headerlink" title="添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）"></a>添加模糊搜索（解决代码只能使用单独的歌名进行搜索的问题）</h2><p>在使用该脚本的时候，发现该脚本只能使用<code>歌曲名</code>进行精确匹配，如果使用<code>歌手名+歌曲名</code>这种形式的模糊搜索，该脚本在搜索结果的页面会失效，对两个搜索结果页面进行对比，发现如下区别：</p><p>精确搜索的歌曲名页面的html结构：</p><p><img src="/./../../../../Downloads/image-20231117061501960.png" alt="image-20231117061501960"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;srchsongst&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w0&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; /song?id=22282046&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Como La Flor&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;s-fc7&quot;</span>&gt;</span>Como La Flor<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td wl&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w2&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span>03:04<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>::after<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag even &quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>模糊搜索的歌曲名页面的html结构：</p><p><img src="/./How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/image-20231117062247088.png" alt="image-20231117062247088"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;srchsongst&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag &quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w0&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sn&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text&quot;</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot; /song?id=22282046&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Como La Flor&quot;</span>&gt;</span>Como La Flor<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td wl&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td w2&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;td&quot;</span>&gt;</span>03:04<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>::after<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item f-cb h-flag even &quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>对比二者可以发现，唯一的区别是精确搜索的<code>&lt;b title=&quot;Como La Flor&quot;&gt;Como La Flor&lt;/b&gt;</code>中多包含了一项<code>&lt;span class=&quot;s-fc7&quot;&gt;&lt;/span&gt;</code>。所以我此处的做法是在<code>srchsongst</code>中选取第一个<code>item f-cb h-flag</code>之后找到其<code>sn</code>选中其中的<code>a</code>即可得到歌曲的<code>id</code>信息</p><p>最后修改过的代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">gotoSearch</span>(<span class="hljs-params">SongName</span>):<br>    browser=webdriver.Chrome(options=chrome_options)<br>    <span class="hljs-keyword">try</span>:<br>        browser.get(<span class="hljs-string">&quot;https://music.163.com/&quot;</span>)<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-built_in">input</span>=browser.find_element(By.ID, <span class="hljs-string">&quot;srch&quot;</span>)  <span class="hljs-comment">#找到搜索栏</span><br>        <span class="hljs-built_in">input</span>.send_keys(SongName)    <span class="hljs-comment">#输入歌曲名</span><br>        <span class="hljs-built_in">input</span>.send_keys(Keys.ENTER)  <span class="hljs-comment">#按下ENTER键</span><br>        time.sleep(<span class="hljs-number">1</span>)<br>        oldiframe = browser.find_element(By.CLASS_NAME, <span class="hljs-string">&#x27;g-iframe&#x27;</span>)  <span class="hljs-comment"># iFrame or Shadow DOM: If the content is inside an iFrame or a Shadow DOM, you need to switch to that context before accessing the elements.</span><br>        browser.switch_to.frame(oldiframe)<br>        wait = WebDriverWait(browser, <span class="hljs-number">1</span>)<br>        srchsongst_div = wait.until(EC.presence_of_element_located((By.CLASS_NAME, <span class="hljs-string">&#x27;srchsongst&#x27;</span>)))<br>        srchsongst_div=browser.find_element(By.CLASS_NAME,<span class="hljs-string">&quot;srchsongst&quot;</span>)   <span class="hljs-comment">#找到歌曲的超链接位置</span><br>        first_child_div = srchsongst_div.find_element(By.CSS_SELECTOR, <span class="hljs-string">&#x27;div.item.f-cb.h-flag&#x27;</span>)<br>        details = first_child_div.find_element(By.CLASS_NAME, <span class="hljs-string">&quot;sn&quot;</span>)<br>        url_element = details.find_element(By.TAG_NAME, <span class="hljs-string">&#x27;a&#x27;</span>)<br>        url = url_element.get_attribute(<span class="hljs-string">&#x27;href&#x27;</span>)<br>        url_element.click()  <span class="hljs-comment"># its different from browser.get(url) but I donnot know why</span><br>        url=<span class="hljs-built_in">str</span>(browser.current_url)<br>        <span class="hljs-built_in">print</span>(url)        <span class="hljs-comment">#打印当前的url</span><br>        SongID = url.split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment"># 得到此歌曲的ID</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SongID&quot;</span>, SongID)  <span class="hljs-comment"># 打印此歌曲的ID</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        SongComments = browser.find_elements(By.XPATH, <span class="hljs-string">&quot;//h3[@class=&#x27;u-hd4&#x27;]&quot;</span>)[<span class="hljs-number">1</span>]  <span class="hljs-comment">#求出最新评论数</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SongComments&quot;</span>, SongComments)<br>        MaxPage = getMaxPage(SongComments.text)  <span class="hljs-comment"># 获取到评论总页数</span><br>        current = <span class="hljs-number">1</span><br>        is_first = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">if</span> MaxPage&gt;<span class="hljs-number">10</span>:    <span class="hljs-comment">#最多只爬取十页评论</span><br>            MaxPage=<span class="hljs-number">10</span><br>        <span class="hljs-keyword">while</span> current &lt;= MaxPage:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;正在爬取第&#x27;</span>, current, <span class="hljs-string">&#x27;页的数据&#x27;</span>)<br>            <span class="hljs-keyword">if</span> current == <span class="hljs-number">1</span>:<br>                is_first = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">else</span>:<br>                is_first = <span class="hljs-literal">False</span><br>            data_list = get_comments(is_first, browser)<br>            time.sleep(<span class="hljs-number">1</span>)<br>            go_nextpage(browser)<br>            time.sleep(random.randint(<span class="hljs-number">8</span>, <span class="hljs-number">12</span>))<br>            current += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">except</span> URLError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误原因：&quot;</span>+e.reason)<br>    <span class="hljs-keyword">finally</span>:<br>        browser.close()<br></code></pre></td></tr></table></figure><p>ps: 我一开始将<code>url_element.click()</code>改为了<code>browser.get(url)</code>，这样做虽然页面也会跳转到歌曲页面，但是在执行<code>SongComments = browser.find_elements(By.XPATH, &quot;//h3[@class=&#39;u-hd4&#39;]&quot;)[1]  #求出最新评论数</code>会报错，暂时不清楚原因（难道是browser并没有刷新并加载新的页面，导致无法获取这个信息？）</p><h2 id="根据歌曲id获取歌词"><a href="#根据歌曲id获取歌词" class="headerlink" title="根据歌曲id获取歌词"></a>根据歌曲id获取歌词</h2><p>根据这篇博客 <a href="https://blog.csdn.net/weixin_45576923/article/details/113815385">https://blog.csdn.net/weixin_45576923/article/details/113815385</a> 介绍，无需账户登录，通过<code>url = f&quot;http://music.163.com/api/song/lyric?id=&#123;song_id&#125;+&amp;lv=1&amp;tv=-1&quot;</code>可以直接获取歌词信息。</p><p>具体而言表现如下：</p><p>比如给定网址： <a href="http://music.163.com/api/song/lyric?id=22282046+&lv=1&tv=-1">http://music.163.com/api/song/lyric?id=22282046+&amp;lv=1&amp;tv=-1</a></p><p>会返回如下json格式的字符串：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;sgc&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;sfy&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;qfy&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;transUser&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">12477352</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">99</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;demand&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;userid&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">73446966</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;一片丹心向日葵&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;uptime&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1604988576230</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;lyricUser&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">12477349</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">99</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;demand&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;userid&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">73446966</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;nickname&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;一片丹心向日葵&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;uptime&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1604988562848</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;lrc&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">9</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;lyric&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;[00:00.00] 作词 : A.B. Quintanilla III/Pete Astudillo\n[00:01.00] 作曲 : A.B. Quintanilla III/Pete Astudillo\n[00:17.23]Yo sé que tienes un nuevo amor\n[00:22.35]Sin embargo, te deseo lo mejor\n[00:27.55]Si en mi no encontraste felicidad\n[00:32.88]Tal vez alguien más te la dará\n[00:37.90]Como la flor (Como la flor)\n[00:40.35]Con tanto amor (Con tanto amor)\n[00:43.12]Me diste tú, se marchito\n[00:48.24]Me marcho hoy, yo sé perder\n[00:53.85]Pero, a-a-ay\n[00:56.30]Cómo me duele\n[00:59.35]A-a-ay\n[01:01.57]Cómo me duele\n[01:20.33]Si vieras como duele perder tu amor\n[01:25.60]Con tu adiós te llevas mi corazón\n[01:31.01]No sé si pueda volver a amar\n[01:36.13]Porque te di todo el amor que pude dar\n[01:41.03]Como la flor (Como la flor)\n[01:43.69]Con tanto amor (Con tanto amor)\n[01:46.32]Me diste tú, se marchito\n[01:51.44]Me marcho hoy, yo sé perder\n[01:56.83]Pero, a-a-ay\n[01:59.50]Cómo me duele\n[02:02.77]A-a-ay\n[02:04.77]Cómo me duele\n[02:15.14]Como la flor (Como la flor)\n[02:17.97]Con tanto amor (Con tanto amor)\n[02:20.44]Me diste tú, se marchito\n[02:25.66]Me marcho hoy, yo sé perder\n[02:31.33]Pero, a-a-ay\n[02:33.70]Cómo me duele\n[02:36.93]A-a-ay\n[02:38.89]Cómo me duele\n[02:42.30]A-a-ay\n[02:44.29]Cómo me duele\n&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;tlyric&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;lyric&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;[by:一片丹心向日葵]\n[00:17.23]我知道你已另寻新欢\n[00:22.35]尽管如此 我仍愿你一切安好\n[00:27.55]如果在我身上你找不到幸福\n[00:32.88]或许别人能够给予你\n[00:37.90]如一朵花(如一朵花)\n[00:40.35]载着万般爱意(载着万般爱意)\n[00:43.12]你赠予给我的花 也已枯萎\n[00:48.24]我必须离开 我知道我输了\n[00:53.85]但是啊\n[00:56.30]我真的很心痛\n[00:59.35]啊\n[01:01.57]我真的很痛\n[01:20.33]你无法想象失去你的爱我有多伤痛\n[01:25.60]随着你的道别 也带走了我的心\n[01:31.01]我不知道未来是否会再爱一次\n[01:36.13]因为我已把能给的爱都奉献给你\n[01:41.03]如一朵花(如一朵花)\n[01:43.69]载着万般爱意(载着万般爱意)\n[01:46.32]你赠予给我的花 也已枯萎\n[01:51.44]我必须离开 我知道我输了\n[01:56.83]但是啊\n[01:59.50]我真的很心痛\n[02:02.77]啊\n[02:04.77]我真的很痛\n[02:15.14]如一朵花(如一朵花)\n[02:17.97]载着万般爱意(载着万般爱意)\n[02:20.44]你赠予给我的花 也已枯萎\n[02:25.66]我必须离开 我知道我输了\n[02:31.33]但是啊\n[02:33.70]我真的很心痛\n[02:36.93]啊\n[02:38.89]我真的很痛\n[02:42.30]啊\n[02:44.29]我真的很痛&quot;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">200</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>根据博主的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_lyric</span>(<span class="hljs-params">song_id</span>):<br>    headers = &#123;<br>        <span class="hljs-string">&quot;user-agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span> : <span class="hljs-string">&quot;http://music.163.com&quot;</span>,<br>        <span class="hljs-string">&quot;Host&quot;</span> : <span class="hljs-string">&quot;music.163.com&quot;</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">isinstance</span>(song_id, <span class="hljs-built_in">str</span>):<br>        song_id = <span class="hljs-built_in">str</span>(song_id)<br>    url = <span class="hljs-string">f&quot;http://music.163.com/api/song/lyric?id=<span class="hljs-subst">&#123;song_id&#125;</span>+&amp;lv=1&amp;tv=-1&quot;</span><br>    r = requests.get(url, headers=headers)<br>    r.raise_for_status()<br>    r.encoding = r.apparent_encoding<br>    json_obj = json.loads(r.text)<br>    <span class="hljs-keyword">return</span> json_obj[<span class="hljs-string">&quot;lrc&quot;</span>][<span class="hljs-string">&quot;lyric&quot;</span>]<br></code></pre></td></tr></table></figure><p>自此，我们完成了通过<code>歌曲名+歌手名</code>模糊搜索得到歌曲<code>id</code>进而得到歌词的过程，接下来我们通过整理之前收集到的<code>matched_lyrics_with_key.json</code>批量获得带有时间轴的歌词。</p><h2 id="批量爬取歌词"><a href="#批量爬取歌词" class="headerlink" title="批量爬取歌词"></a>批量爬取歌词</h2><p>该部分由两部分组成</p><h3 id="批量获取歌曲id"><a href="#批量获取歌曲id" class="headerlink" title="批量获取歌曲id"></a>批量获取歌曲id</h3><p>首先使用已经统计好的json文件，其文件格式如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;md5&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;artist&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;song&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;md5&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;artist&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;song&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">,</span><br>    ....<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>将爬取后的json文件格式设计为，用<code>_</code>将id加入到md5的后面：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;md5_id&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;artist&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;song&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;md5_id&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;artist&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;song&quot;</span><span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">,</span><br>    ....<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>实现代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">split_dict_keys</span>(<span class="hljs-params">original_dict</span>):<br>    new_dict = &#123;&#125;<br>    filted_new_dict = &#123;&#125;<br>    <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> original_dict.items():<br>        <span class="hljs-comment"># Splitting the key on the underscore</span><br>        front_part = key.split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-comment"># Using the front part as the new key</span><br>        <span class="hljs-keyword">if</span> key.split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">1</span>] != <span class="hljs-string">&quot;-1&quot;</span>:  <span class="hljs-comment"># not found key may caused by network problem rather than not exist</span><br>            new_dict[front_part] = value<br>            filted_new_dict[key] = value<br>    <span class="hljs-keyword">return</span> new_dict, filted_new_dict<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">findIDs</span>(<span class="hljs-params">input_path = <span class="hljs-string">r&#x27;matched_lyrics_with_key.json&#x27;</span></span><br><span class="hljs-params">, output_path = <span class="hljs-string">r&#x27;matched_lyrics_with_id.json&#x27;</span></span>):    <br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(input_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file0:<br>        json_data = json.load(file0)<br>        file0.close()<br>    <br><br>    updated_data = &#123;&#125;<br>    exist_keys = &#123;&#125;<br>    <span class="hljs-keyword">if</span> os.path.exists(output_path):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file2:<br>            json_data_exist = json.load(file2)<br>            exist_keys, updated_data = split_dict_keys(json_data_exist)  <span class="hljs-comment"># load data crawled before</span><br>            file2.close()<br>        <span class="hljs-comment"># updated_data = json_data_exist  # load data crawled before into current dict</span><br><br>    temp_num = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> tqdm(json_data.items()):<br>        temp_num += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> key <span class="hljs-keyword">in</span> exist_keys:  <span class="hljs-comment"># check if the key already in crawled data</span><br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">else</span>:<br>            artist, song = <span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(value.items()))<br>            search_str = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;artist&#125;</span>: <span class="hljs-subst">&#123;song&#125;</span>&quot;</span><br>            song_id = <span class="hljs-literal">None</span><br><br>            <span class="hljs-keyword">try</span>:<br>                song_id = gotoSearchID(search_str)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                song_id = -<span class="hljs-number">1</span>     <span class="hljs-comment"># to skip the data not found</span><br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;something went wrong:&quot;</span>, e, <span class="hljs-string">&quot;\n&quot;</span>)<br>                <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;I/O operation on closed file&quot;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(e):<br>                    <span class="hljs-keyword">break</span><br><br>            <span class="hljs-keyword">if</span> song_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>                new_key = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;key&#125;</span>_<span class="hljs-subst">&#123;song_id&#125;</span>&quot;</span><br>                updated_data[new_key] = &#123;artist : song&#125;<br>                <span class="hljs-keyword">if</span> temp_num % <span class="hljs-number">10</span> == <span class="hljs-number">0</span>:<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_path, <span class="hljs-string">&quot;w&quot;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file1:<br>                        json.dump(updated_data, file1, indent=<span class="hljs-number">4</span>, ensure_ascii=<span class="hljs-literal">False</span>)<br>                        file1.close()<br>                        time.sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_path, <span class="hljs-string">&quot;w&quot;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file1:<br>        json.dump(updated_data, file1, indent=<span class="hljs-number">4</span>, ensure_ascii=<span class="hljs-literal">False</span>)<br>        file1.close()<br>        time.sleep(<span class="hljs-number">1</span>)<br>        <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># SearchName = &quot;Selena: Como La Flor&quot;</span><br>    <span class="hljs-comment"># SongName = &quot;Como La Flor&quot;</span><br>    <span class="hljs-comment"># # gotoSong(SongName)</span><br>    <span class="hljs-comment"># print(gotoSearchLyrics(SearchName))</span><br>    findIDs()<br></code></pre></td></tr></table></figure><h3 id="根据id批量获取歌词"><a href="#根据id批量获取歌词" class="headerlink" title="根据id批量获取歌词"></a>根据id批量获取歌词</h3><p>还记得我们之前提到的 <code>http://music.163.com/api/song/lyric?id=&#123;song_id&#125;+&amp;lv=1&amp;tv=-1</code> 这个开放api吗，只需要将json文件中的id逐一添加入该url并dump出其中的lyrics信息即可。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_filenames_dict</span>(<span class="hljs-params">folder_path</span>):<br>    <span class="hljs-comment"># Dictionary to store filenames without extension</span><br>    filenames_dict = &#123;&#125;<br><br>    <span class="hljs-comment"># Iterate over all files in the folder</span><br>    <span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> os.listdir(folder_path):<br>        <span class="hljs-comment"># Check if it&#x27;s a file and not a directory</span><br>        <span class="hljs-keyword">if</span> os.path.isfile(os.path.join(folder_path, filename)):<br>            <span class="hljs-comment"># Split the filename from its extension and add to the dictionary</span><br>            name, _ = os.path.splitext(filename)<br>            filenames_dict[name] = <span class="hljs-literal">None</span>  <span class="hljs-comment"># Or any other default value</span><br><br>    <span class="hljs-keyword">return</span> filenames_dict<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_key_and_id</span>(<span class="hljs-params">ori_key</span>):<br>    key = ori_key.split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">id</span> = ori_key.split(<span class="hljs-string">&#x27;_&#x27;</span>)[<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> key, <span class="hljs-built_in">id</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_lyric</span>(<span class="hljs-params">song_id</span>):<br>    headers = &#123;<br>        <span class="hljs-string">&quot;user-agent&quot;</span> : <span class="hljs-string">&quot;Mozilla/5.0&quot;</span>,<br>        <span class="hljs-string">&quot;Referer&quot;</span> : <span class="hljs-string">&quot;http://music.163.com&quot;</span>,<br>        <span class="hljs-string">&quot;Host&quot;</span> : <span class="hljs-string">&quot;music.163.com&quot;</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">isinstance</span>(song_id, <span class="hljs-built_in">str</span>):<br>        song_id = <span class="hljs-built_in">str</span>(song_id)<br>    url = <span class="hljs-string">f&quot;http://music.163.com/api/song/lyric?id=<span class="hljs-subst">&#123;song_id&#125;</span>+&amp;lv=1&amp;tv=-1&quot;</span><br>    r = requests.get(url, headers=headers)<br>    r.raise_for_status()<br>    r.encoding = r.apparent_encoding<br>    json_obj = json.loads(r.text)<br>    <span class="hljs-keyword">return</span> json_obj[<span class="hljs-string">&quot;lrc&quot;</span>][<span class="hljs-string">&quot;lyric&quot;</span>]<br><br>input_path = <span class="hljs-string">r&#x27;C:\Users\iMusic\Desktop\netease_lyrics_crawler\matched_lyrics_with_id - Copy.json&#x27;</span><br><span class="hljs-keyword">if</span> os.path.exists(input_path):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(input_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file2:<br>        json_data_exist = json.load(file2)<br><br>output_path = <span class="hljs-string">r&#x27;\lyrics&#x27;</span><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">r&#x27;\lyrics&#x27;</span>):<br>       os.makedirs(<span class="hljs-string">r&#x27;\lyrics&#x27;</span>)           <br><br>exist_filenames_dict = get_filenames_dict(output_path)<br><br><br><span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> tqdm(json_data_exist.items()):<br>    key, <span class="hljs-built_in">id</span> = get_key_and_id(key)<br>    <span class="hljs-keyword">if</span> key <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> exist_filenames_dict:<br>        lyric = <span class="hljs-literal">None</span><br>        <span class="hljs-keyword">try</span>:<br>            lyric = get_lyric(<span class="hljs-built_in">id</span>)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        <span class="hljs-keyword">if</span> lyric:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_path + <span class="hljs-string">&#x27;\\&#x27;</span> + key + <span class="hljs-string">&#x27;.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>                json.dump(lyric, file, indent=<span class="hljs-number">4</span>, ensure_ascii=<span class="hljs-literal">False</span>)<br><br><br></code></pre></td></tr></table></figure><p>至此，整个代码完整搭建。接下来是使用该脚本时出现的一些问题。</p><h2 id="后日谈"><a href="#后日谈" class="headerlink" title="后日谈"></a>后日谈</h2><h3 id="I-O-operation-on-closed-file"><a href="#I-O-operation-on-closed-file" class="headerlink" title="I&#x2F;O operation on closed file"></a>I&#x2F;O operation on closed file</h3><p>这个问题会在程序执行一段时间后间歇性的出现，最后就会导致这一轮程序运行在报错之后遍历之后所有的条目且返回id &#x3D; -1。我尝试了以下几种方式进行解决，但是最后发现都只有一定程度的缓解</p><h4 id="加入循环尝试多轮运行程序"><a href="#加入循环尝试多轮运行程序" class="headerlink" title="加入循环尝试多轮运行程序"></a>加入循环尝试多轮运行程序</h4><p>基本思路就是一轮不行多来几轮。</p><p>第一个思路是直接在python程序中加入死循环：（完全无效）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):<br><span class="hljs-keyword">try</span>:<br>findID()<br><span class="hljs-keyword">except</span>:<br><span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p>但是似乎这个报错是与整个python脚本对应的进程捆绑在一起的，这一轮函数执行完成跳出后并不能解决这个错误。</p><p>第二个思路是使用一个bat脚本嵌套python脚本，即尝试在一次执行完python脚本后再次启动执行，bat脚本如下，尝试上该脚本执行100次（有效）：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-keyword">for</span> /L <span class="hljs-variable">%%i</span> <span class="hljs-keyword">in</span> (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">100</span>) <span class="hljs-keyword">do</span> (<br>    python lyrics_crawler.py<br>)<br></code></pre></td></tr></table></figure><h4 id="减少json的读写次数"><a href="#减少json的读写次数" class="headerlink" title="减少json的读写次数"></a>减少json的读写次数</h4><p>将每次获取id就完整写一次json文件改为每十次获取id再完整写一次json文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">temp = <span class="hljs-number">0</span><br><br>......<br><br><span class="hljs-keyword">if</span> temp_num % <span class="hljs-number">10</span> == <span class="hljs-number">0</span>:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_path, <span class="hljs-string">&quot;w&quot;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> file1:<br>        json.dump(updated_data, file1, indent=<span class="hljs-number">4</span>, ensure_ascii=<span class="hljs-literal">False</span>)<br>        time.sleep(<span class="hljs-number">1</span>)<br>......<br><br>temp += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="早停"><a href="#早停" class="headerlink" title="早停"></a>早停</h4><p>实际上报错不止有I&#x2F;O的error，比如还有以下几类不同的error：</p><p>1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">something went wrong: Message:<br>Stacktrace:<br>        GetHandleVerifier [0x00007FF6EE2D82B2+55298]<br>        (No symbol) [0x00007FF6EE245E02]<br>        (No symbol) [0x00007FF6EE1005AB]<br>        (No symbol) [0x00007FF6EE14175C]<br>        (No symbol) [0x00007FF6EE1418DC]<br>        (No symbol) [0x00007FF6EE17CBC7]<br>        (No symbol) [0x00007FF6EE1620EF]<br>        (No symbol) [0x00007FF6EE17AAA4]<br>        (No symbol) [0x00007FF6EE161E83]<br>        (No symbol) [0x00007FF6EE13670A]<br>        (No symbol) [0x00007FF6EE137964]<br>        GetHandleVerifier [0x00007FF6EE650AAB+3694587]<br>        GetHandleVerifier [0x00007FF6EE6A728E+4048862]<br>        GetHandleVerifier [0x00007FF6EE69F173+4015811]<br>        GetHandleVerifier [0x00007FF6EE3747D6+695590]<br>        (No symbol) [0x00007FF6EE250CE8]<br>        (No symbol) [0x00007FF6EE24CF34]<br>        (No symbol) [0x00007FF6EE24D062]<br>        (No symbol) [0x00007FF6EE23D3A3]<br>        BaseThreadInitThunk [0x00007FFCA6CF7344+20]<br>        RtlUserThreadStart [0x00007FFCA73626B1+33]<br></code></pre></td></tr></table></figure><p>2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">something went wrong: can only concatenate str (not <span class="hljs-string">&quot;TimeoutException&quot;</span>) to str<br></code></pre></td></tr></table></figure><p>3：</p><p>以及一个与timelatency相关的报错，找不到报错原信息了</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">timelatency</span><br></code></pre></td></tr></table></figure><p>4：</p><p>远程服务器拒绝访问</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-comment">remote host reject(具体忘记了，没有截取下来)</span><br></code></pre></td></tr></table></figure><p>这几类错误一般都是爬取过程中没有找到对应数据的报错，对程序运行以及爬取结果没有正确性或者效率上的影响。因此可以不用在意，着重处理I&#x2F;O error，毕竟他会拖慢我们的效率。</p><p>处理代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    song_id = gotoSearchID(search_str)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    song_id = -<span class="hljs-number">1</span>     <span class="hljs-comment"># to skip the data not found</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;something went wrong:&quot;</span>, e, <span class="hljs-string">&quot;\n&quot;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;I/O operation on closed file&quot;</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(e):<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>一旦报错，必须打印错误消息，之前由于没有打印导致产生了一堆-1的id而不知道其原因，一开始还以为cookie被限制了，后面才发现是程序本身的I&#x2F;O error的问题，这里由于没有打印错误信息，至少浪费了两个小时。</p><p>最后是对报错信息进行判断，我也不清楚报错返回的具体是什么类型，但是可以确定的是，包括<code>&quot;I/O operation on closed file&quot;</code>的报错一定就是我们需要让程序停下来重新启动的报错。因此直接将报错转换为字符串进行判断是一个比较方便且有效的做法。</p><h4 id="将selenium中的端口号固定"><a href="#将selenium中的端口号固定" class="headerlink" title="将selenium中的端口号固定"></a>将selenium中的端口号固定</h4><p><img src="/./How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/image-20231118163019325.png" alt="image-20231118163019325"></p><p>在每次webdriver启动的时候，都会在本地创建一个进程监听对应的端口号，在默认情况下，这个端口在每次webdriver启动的时候是随机分配的，基本上每次启动的时候都不一样，由于我使用了多个selenium同时运行，考虑到随机分配端口号可能会出现端口冲突的问题，我使用如下的python代码强制让webdriver在每次启动的时候固定监听一个端口号：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">chrome_options.add_argument(<span class="hljs-string">&quot;--remote-debugging-port=12964&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="尽可能少的让selenium在命令行中打印log-info"><a href="#尽可能少的让selenium在命令行中打印log-info" class="headerlink" title="尽可能少的让selenium在命令行中打印log info"></a>尽可能少的让selenium在命令行中打印log info</h4><p>正常情况下，每一次启动webdriver，selenium都会打印很多的log信息（懒得截图了，已经改成静默模式了），这时候可以考虑在代码中加入如下语句让其不再打印log信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">os.environ[<span class="hljs-string">&quot;webdriver.chrome.silentOutput&quot;</span>] = <span class="hljs-string">&quot;true&quot;</span>  <span class="hljs-comment"># I donnot this line make sense or not</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--log-level=3&quot;</span>) <span class="hljs-comment"># make it silent</span><br></code></pre></td></tr></table></figure><h4 id="尽可能的精简selenium启动时需要的部件"><a href="#尽可能的精简selenium启动时需要的部件" class="headerlink" title="尽可能的精简selenium启动时需要的部件"></a>尽可能的精简selenium启动时需要的部件</h4><p>仍然是通过初始化webdriver时修改传递进去的参数做到的，参数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">profile_dir=<span class="hljs-string">r&quot;User Data&quot;</span>    <span class="hljs-comment"># 对应你的chrome的用户数据存放路径  </span><br>chrome_options=webdriver.ChromeOptions()  <br>chrome_options.add_argument(<span class="hljs-string">&quot;--user-data-dir=&quot;</span> + os.path.abspath(profile_dir))<br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-extensions&quot;</span>)<br>chrome_options.add_argument(<span class="hljs-string">&quot;--remote-debugging-port=12964&quot;</span>)<br><br>chrome_options.add_argument(<span class="hljs-string">&quot;--headless&quot;</span>)  <span class="hljs-comment"># Run Chrome in headless mode</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--no-sandbox&quot;</span>) <span class="hljs-comment"># Bypass OS security model</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--disable-dev-shm-usage&quot;</span>) <span class="hljs-comment"># Overcome limited resource problems</span><br>chrome_options.add_argument(<span class="hljs-string">&#x27;--disable-gpu&#x27;</span>)  <span class="hljs-comment"># Disable GPU for headless mode</span><br><br><br>os.environ[<span class="hljs-string">&quot;webdriver.chrome.silentOutput&quot;</span>] = <span class="hljs-string">&quot;true&quot;</span><br>chrome_options.add_argument(<span class="hljs-string">&quot;--log-level=3&quot;</span>) <span class="hljs-comment"># make it silent</span><br>chrome_service = ChromeService(executable_path=<span class="hljs-string">r&quot;chromedriver.exe&quot;</span>, log_path=os.devnull) <span class="hljs-comment"># make it totally silent but not work</span><br></code></pre></td></tr></table></figure><h4 id="网络波动"><a href="#网络波动" class="headerlink" title="网络波动"></a>网络波动</h4><p>脚本运行一段时间后，不清楚是什么原因网络变得很卡，也可能二者之间并没有直接联系，但是可以确定网络波动确实会使得脚本挂掉，因此我重启了软路由以及重新注册了网络让网络变得更加顺畅。</p><h4 id="将CPU调回默认的设置"><a href="#将CPU调回默认的设置" class="headerlink" title="将CPU调回默认的设置"></a>将CPU调回默认的设置</h4><p><img src="/./How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/image-20231118162848696.png" alt="image-20231118162848696"></p><p>通过上图可以观察到CPU在运行脚本的时候因为需要反复的发送网络请求以及频繁的进行IO操作，会导致CPU运行过程中出现很多负载上的尖峰，我之前在BIOS中设置CPU的时候，选择了降压超频，将CPU的电压锁在1.26v，这样也许会使得程序不那么稳定。因此我将其电压设置为了auto，不再对其电压上限做出人为的限制。</p>]]></content>
    
    
    
    <tags>
      
      <tag>crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SongMASS: Automatic Song Writing with Pre-training and Alignment Constraint</title>
    <link href="/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/"/>
    <url>/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diffusion-LM Improves Controllable Text Generation</title>
    <link href="/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/"/>
    <url>/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/</url>
    
    <content type="html"><![CDATA[<ul><li>method: diffusion</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/09/hello-world/"/>
    <url>/2023/11/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
