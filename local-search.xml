<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Poco X4 GT insert magisk into ROM</title>
    <link href="/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/"/>
    <url>/2023/11/17/Poco-X4-GT-insert-magisk-into-ROM/</url>
    
    <content type="html"><![CDATA[<h2 id="下载并使用magisk刷写boot-img"><a href="#下载并使用magisk刷写boot-img" class="headerlink" title="下载并使用magisk刷写boot.img"></a>下载并使用magisk刷写boot.img</h2><p>首先下载对应版本的线刷包（Fastboot），下载网址：<a href="https://xiaomifirmwareupdater.com/miui/xaga/">https://xiaomifirmwareupdater.com/miui/xaga/</a></p><p>我是全球版本的ROM，因此选择Global版本：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117013552213.png" alt="image-20231117013552213"></p><p>之后将压缩包中的boot.img文件提取出来：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117013714839.png" alt="image-20231117013714839"></p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117013736077.png" alt="image-20231117013736077"></p><p>然后导入手机，打开magisk选择install（Magisk旁的install）：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117014224668.png" alt="image-20231117014224668"></p><p>选择boot.img之后点击let’s go：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117014218823.png" alt="image-20231117014218823"></p><p>最后等待刷写完成：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117014359917.png" alt="image-20231117014359917"></p><h2 id="使用adb将boot-img重新刷写入系统"><a href="#使用adb将boot-img重新刷写入系统" class="headerlink" title="使用adb将boot.img重新刷写入系统"></a>使用adb将boot.img重新刷写入系统</h2><p>首先确保fastboot是否能够检测到设别，如果不能的话，需要先使用MiUsbDriver打好驱动：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117014642200.png" alt="image-20231117014642200"></p><p>之后使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot devices<br></code></pre></td></tr></table></figure><p>查看连接到电脑上的手机设备是否已经被识别到：</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117014813735.png" alt="image-20231117014813735"></p><p>如果被成功识别，会显示上述文本</p><p>之后使用如下命令刷写boot.img分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fastboot flash boot_ab &#123;your_magisk_boot.img&#125;<br></code></pre></td></tr></table></figure><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117015153873.png" alt="image-20231117015153873"></p><p>（该命令源自于刷机包中的<code> flash_all.bat</code>文件）</p><p><img src="C:\Users\iMusic\AppData\Roaming\Typora\typora-user-images\image-20231117015333584.png" alt="image-20231117015333584"></p><p>至此，刷写完成。（但我现在的状况是magisk内显示没有root但lsposed可以正常工作，很迷）</p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to crawl lyrics and music data from netease music with artist&#39;s name and song&#39;s name</title>
    <link href="/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/"/>
    <url>/2023/11/16/How-to-crawl-lyrics-and-music-data-from-netease-music-with-artist-s-name-and-song-s-name/</url>
    
    <content type="html"><![CDATA[<p>根据<a href="https://www.cnblogs.com/pikeduo/p/16938738.html%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%85%B6%E4%B8%AD%E6%9C%89%E5%9F%BA%E4%BA%8Eapi%E5%BE%97%E5%88%B0%E6%AD%8C%E6%9B%B2id%E7%9A%84%E4%BB%A3%E7%A0%81%EF%BC%9A">https://www.cnblogs.com/pikeduo/p/16938738.html中的代码，其中有基于api得到歌曲id的代码：</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">api接口</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib3.exceptions <span class="hljs-keyword">import</span> InsecureRequestWarning<br><br>requests.packages.urllib3.disable_warnings(InsecureRequestWarning)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">wangyiyun</span>:<br>    <span class="hljs-comment"># 获取数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_data</span>(<span class="hljs-params">self, url, data</span>):<br>        re = requests.post(url=url, data=data, verify=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> re.json()<br>    <span class="hljs-comment"># 返回搜索数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_search_data</span>(<span class="hljs-params">self, s=<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-number">1</span>, offset=<span class="hljs-number">0</span>, total=<span class="hljs-string">&#x27;true&#x27;</span>, limit=<span class="hljs-number">30</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com/api/cloudsearch/get/web&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;hlpretag&#x27;</span>: <span class="hljs-string">&#x27;&lt;span class=&quot;s-fc7&quot;&gt;&#x27;</span>,<br>            <span class="hljs-string">&#x27;hlposttag&#x27;</span>: <span class="hljs-string">&#x27;&lt;/span&gt;&#x27;</span>,<br>            <span class="hljs-string">&#x27;s&#x27;</span>: s,<br>            <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-built_in">type</span>,<br>            <span class="hljs-string">&#x27;offset&#x27;</span>: offset,<br>            <span class="hljs-string">&#x27;total&#x27;</span>: total,<br>            <span class="hljs-string">&#x27;limit&#x27;</span>: limit,<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span> self.get_data(url, data)<br><br>    <span class="hljs-comment"># 返回歌词数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_lyric_data</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span>, lv=-<span class="hljs-number">1</span>, tv=-<span class="hljs-number">1</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com/api/song/lyric&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>,<br>            <span class="hljs-string">&#x27;lv&#x27;</span>: lv,<br>            <span class="hljs-string">&#x27;tv&#x27;</span>: tv,<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span> self.get_data(url, data)<br><br>    <span class="hljs-comment"># 返回音乐详情,包含了音质等级和可下载权限</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_detail_data</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com/api/v3/song/detail&#x27;</span><br>        c = <span class="hljs-string">&#x27;[&#123;&#x27;</span> + <span class="hljs-string">f&#x27;&quot;id&quot;:&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;&#x27;</span> + <span class="hljs-string">&#x27;&#125;]&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>,<br>            <span class="hljs-string">&#x27;c&#x27;</span>: c,<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span>  self.get_data(url, data)<br><br>    <span class="hljs-comment"># 返回下载数据，level代表音质等级，encodeType代表编码类型，flac可存储无损音质，目前无法下载无损音乐</span><br>    <span class="hljs-comment"># # 音质 standard标准 higher较高 exhigh极高 lossless无损 hires</span><br>    <span class="hljs-comment"># # 编码类型 aac flac</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_download_data</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span>, level=<span class="hljs-string">&#x27;exhigh&#x27;</span>, encodeType=<span class="hljs-string">&#x27;flac&#x27;</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com//api/song/enhance/player/url/v1&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;encodeType&#x27;</span>: encodeType,<br>            <span class="hljs-string">&#x27;ids&#x27;</span>: <span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>),<br>            <span class="hljs-string">&#x27;level&#x27;</span>: level,<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span> self.get_data(url, data)<br><br>    <span class="hljs-comment"># 通过播放器外链的方式返回的音乐详情数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_detail_outdata</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span>, limit=<span class="hljs-number">10000</span>, offset=<span class="hljs-number">0</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com/api/song/detail&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-built_in">id</span>,<br>            <span class="hljs-string">&#x27;ids&#x27;</span>: <span class="hljs-string">f&#x27;[<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>)&#125;</span>]&#x27;</span>,<br>            <span class="hljs-string">&#x27;limit&#x27;</span>: limit,<br>            <span class="hljs-string">&#x27;offset&#x27;</span>: offset,<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span> self.get_data(url, data)<br><br>    <span class="hljs-comment"># 通过播放器外链的方式返回的音乐下载数据</span><br>    <span class="hljs-comment"># br代表音质，四个等级 标准128000 较高192000 极高320000 无损999000</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_download_outdata</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span>, br=<span class="hljs-number">320000</span>, csrf_token=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>        url = <span class="hljs-string">&#x27;https://music.163.com/api/song/enhance/player/url&#x27;</span><br>        data = &#123;<br>            <span class="hljs-string">&#x27;br&#x27;</span>: br,<br>            <span class="hljs-string">&#x27;ids&#x27;</span>: <span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>),<br>            <span class="hljs-string">&#x27;csrf_token&#x27;</span>: csrf_token<br>        &#125;<br>        <span class="hljs-keyword">return</span> self.get_data(url, data)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>crawler</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SongMASS: Automatic Song Writing with Pre-training and Alignment Constraint</title>
    <link href="/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/"/>
    <url>/2023/11/10/SongMASS-Automatic-Song-Writing-with-Pre-training-and-Alignment-Constraint/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Diffusion-LM Improves Controllable Text Generation</title>
    <link href="/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/"/>
    <url>/2023/11/09/Diffusion-LM-Improves-Controllable-Text-Generation/</url>
    
    <content type="html"><![CDATA[<ul><li>method: diffusion</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/09/hello-world/"/>
    <url>/2023/11/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
